{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/SingleRestDashboard.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { Card, ListGroup, ListGroupItem, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Modal } from 'react-bootstrap'; //import { Link } from 'react-router-dom';\n\nimport ReactTooltip from 'react-tooltip';\nimport backendServer from \"../../webConfig\";\nimport { BiCartAlt } from 'react-icons/bi';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { restaurantHome } from \"../../actions/restaurantHomeActions\";\n\nclass SingleRestDashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/restdashboard');\n    };\n\n    this.gobackFav = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/favourites');\n    };\n\n    this.addtocart = (restid, dishid, dishname, dishprice) => {\n      const cartvalue = {\n        customerid: localStorage.getItem(\"userid\"),\n        deliverytype: localStorage.getItem(\"deliverytype\"),\n        restaurantid: restid,\n        dishid: dishid,\n        dishname: dishname,\n        dishprice: dishprice,\n        quantity: this.state.quantity,\n        quantityprice: dishprice * this.state.quantity\n      };\n      localStorage.setItem(\"dishid\", dishid);\n      localStorage.setItem(\"dishname\", dishname);\n      localStorage.setItem(\"dishprice\", dishprice);\n      localStorage.setItem(\"quantity\", cartvalue.quantity);\n      localStorage.setItem(\"quantityprice\", cartvalue.quantityprice);\n      this.addToCart(cartvalue); //  this.setState({\n      //   show : true \n      // });\n    };\n\n    this.addToCart = data => {\n      console.log(\"add to cart\"); // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //   \"token\");\n\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/addtocarttable`, data).then(res => {\n        console.log(\"res.data\");\n        console.log(res.data);\n\n        if (res.data === \"Delete previous order\") {\n          this.setState({\n            show: \"true\"\n          });\n        }\n\n        if (res.data === \"Quantity updated\") {\n          this.setState({\n            showfav: \"true\"\n          });\n        } // console.log(\"Status Code : \", res.status);\n        // if (res.status === 200) {\n        //   this.setState({ authFlag: true });\n        // } else {\n        //   this.setState({ authFlag: false });\n        // }\n\n      });\n    };\n\n    this.handleNewOrder = () => {\n      const data = {\n        customerid: localStorage.getItem(\"userid\"),\n        restaurantid: localStorage.getItem(\"restaurantid\"),\n        dishid: localStorage.getItem(\"dishid\"),\n        dishname: localStorage.getItem(\"dishname\"),\n        dishprice: localStorage.getItem(\"dishprice\"),\n        quantity: localStorage.getItem(\"quantity\"),\n        quantityprice: localStorage.getItem(\"quantityprice\"),\n        deliverytype: localStorage.getItem(\"deliverytype\")\n      };\n      console.log(data); //localStorage.setItem(\"restname\",this.state.restaurantname);\n      // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //   \"token\");\n\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/handleneworder`, data).then(res => {// if (res.status === 200) {\n        //   this.setState({ authFlag: true });\n        // } else {\n        //   this.setState({ authFlag: false });\n        // }\n      });\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.state = {\n      restaurantname: localStorage.getItem(\"restaurantname\"),\n      restaurantid: localStorage.getItem(\"restaurantid\"),\n      //restaurantname:null,\n      description: null,\n      //restaurantname:null,\n      query: null,\n      dish: null,\n      status: \"notdone\",\n      dishes: [],\n      restaurants: [],\n      message: null,\n      newrestid: null,\n      customerid: null,\n      dishid: null,\n      dishname: null,\n      dishprice: null,\n      quantity: 1,\n      deliverytype: null,\n      quantityprice: null,\n      show: false,\n      showfav: false\n    };\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n    const {\n      history\n    } = this.props;\n    history.push('/singlerestdashboard');\n  }\n\n  handleModalCloseFav() {\n    this.setState({\n      showfav: !this.state.showfav\n    }); // const {history} = this.props;\n    // history.push('/singlerestdashboard'); \n  }\n\n  componentDidMount() {\n    const restaurantid = {\n      restaurantid: localStorage.getItem(\"restaurantid\")\n    };\n    this.props.restaurantHome(restaurantid); // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n    //   axios.post(`${backendServer}/getrestaurantwithid`,restaurantid)\n    //           .then((response) => { \n    //             console.log(response.data)\n    //           //update the state with the response data\n    //           this.setState({\n    //             dishes : this.state.dishes.concat(response.data) \n    //           });\n    //          //console.log(this.state.dishes);\n    //       });\n    // const userid = localStorage.getItem(\"restaurantid\")\n    // console.log(userid)\n\n    const restid = {\n      userid: localStorage.getItem(\"restaurantid\")\n    }; // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n    //   \"token\"\n    // );\n\n    axios.post(`${backendServer}/getrestaurantprofile`, restid).then(response => {\n      console.log(\"****\");\n      console.log(response);\n      console.log(\"****\");\n      this.setState({\n        restaurants: this.state.restaurants.concat(response.data)\n      }); //     this.setState({\n      //       restaurantname : response.data[0].username\n      //     });\n      //     this.setState({\n      //       deliverytype : response.data[0].deliverytype\n      //     });\n      //     localStorage.setItem(\"DeliveryType\",this.state.deliverytype);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.resthome) {\n      var {\n        resthome\n      } = nextProps;\n    }\n\n    this.setState({\n      dishes: this.state.dishes.concat(resthome)\n    }); // console.log(typeof(favourite))\n  }\n\n  handleCheckout() {\n    //console.log(this.props);\n    const {\n      history\n    } = this.props;\n    history.push(\"/checkout\");\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    var restaurantdetails = null;\n    var searchresults = null;\n    var messagebox = null;\n    searchresults = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, this.state.dishes.map(dish => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      style: {\n        width: '18rem',\n        height: '13rem'\n      },\n      variant: \"top\",\n      src: `${backendServer}${dish.profilepic}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, dish.dishname)), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, \"Contains : \", dish.ingrediants, \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, \"Price :  $ \", dish.price), /*#__PURE__*/React.createElement(ReactTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"cardbtn2\",\n      \"data-tip\": \"Add To Cart\",\n      onClick: () => {\n        this.addtocart(this.state.restaurantid, dish._id, dish.dishname, dish.price);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BiCartAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    })))))));\n    restaurantdetails = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, this.state.restaurants.map(restaurant => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"restimage\",\n      src: `${backendServer}${restaurant.profilepic}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, restaurant.description))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, this.state.restaurantname), restaurantdetails, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, searchresults), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 14\n      }\n    }, \"Create New Order\"), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 14\n      }\n    }, \"Your Order contain items from another restaurant.Create a new order to add items from \", this.state.restaurantname), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.handleNewOrder();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 16\n      }\n    }, \"New Order\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.showfav,\n      onHide: () => this.handleModalCloseFav(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 14\n      }\n    }, \"Item added to cart!\"))));\n  }\n\n}\n\nSingleRestDashboard.propTypes = {\n  restaurantHome: PropTypes.func.isRequired,\n  resthome: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    resthome: state.resthome.resthome\n  };\n};\n\nexport default connect(mapStateToProps, {\n  restaurantHome\n})(SingleRestDashboard); //export default SingleRestDashboard;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/SingleRestDashboard.js"],"names":["React","Component","Button","Card","ListGroup","ListGroupItem","Row","Col","axios","Modal","ReactTooltip","backendServer","BiCartAlt","PropTypes","connect","restaurantHome","SingleRestDashboard","constructor","props","goback","e","preventDefault","history","push","gobackFav","addtocart","restid","dishid","dishname","dishprice","cartvalue","customerid","localStorage","getItem","deliverytype","restaurantid","quantity","state","quantityprice","setItem","addToCart","data","console","log","defaults","withCredentials","post","then","res","setState","show","showfav","handleNewOrder","restaurantname","description","query","dish","status","dishes","restaurants","message","newrestid","handleModalClose","handleModalCloseFav","componentDidMount","userid","response","concat","componentWillReceiveProps","nextProps","resthome","handleCheckout","render","restaurantdetails","searchresults","messagebox","map","width","height","profilepic","ingrediants","price","_id","restaurant","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Button } from 'reactstrap';\nimport {Card, ListGroup, ListGroupItem,Row,Col} from 'react-bootstrap';\nimport axios from 'axios';\nimport {Modal} from 'react-bootstrap';\n//import { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport backendServer from \"../../webConfig\";\nimport {BiCartAlt} from 'react-icons/bi';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { restaurantHome } from \"../../actions/restaurantHomeActions\";\n\n\nclass SingleRestDashboard extends Component {\n    \n    constructor(props){\n        super(props);\n  \n        this.state = {\n          \n          restaurantname:localStorage.getItem(\"restaurantname\"),\n          restaurantid : localStorage.getItem(\"restaurantid\"),\n          //restaurantname:null,\n          description:null,\n          //restaurantname:null,\n          query : null,\n          dish:null,\n          status:\"notdone\",\n          dishes :[],\n          restaurants:[],\n          message:null,\n          newrestid:null,\n          customerid : null,\n          dishid:null,\n          dishname:null,\n          dishprice:null,\n          quantity:1,\n          deliverytype:null,\n          quantityprice:null,\n          show:false,\n          showfav:false,\n          \n        }\n      \n      }\n      handleModalClose(){\n        this.setState({show:!this.state.show}) \n        const {history} = this.props;\n        history.push('/singlerestdashboard'); \n    }\n\n    handleModalCloseFav(){\n      this.setState({showfav:!this.state.showfav}) \n      // const {history} = this.props;\n      // history.push('/singlerestdashboard'); \n  }\n      componentDidMount(){\n        const restaurantid = {\n          restaurantid: localStorage.getItem(\"restaurantid\")\n      };\n      this.props.restaurantHome(restaurantid);\n      // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n      //   axios.post(`${backendServer}/getrestaurantwithid`,restaurantid)\n      //           .then((response) => { \n      //             console.log(response.data)\n      //           //update the state with the response data\n      //           this.setState({\n      //             dishes : this.state.dishes.concat(response.data) \n      //           });\n      //          //console.log(this.state.dishes);\n      //       });\n            \n            // const userid = localStorage.getItem(\"restaurantid\")\n            // console.log(userid)\n            const restid = {\n              userid: localStorage.getItem(\"restaurantid\")\n            };\n            // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n            //   \"token\"\n            // );\n            axios.post(`${backendServer}/getrestaurantprofile`,restid)\n            .then((response) => { \n              console.log(\"****\")\n              console.log(response)\n              console.log(\"****\")\n            this.setState({\n              restaurants : this.state.restaurants.concat(response.data) \n            });\n           \n        //     this.setState({\n        //       restaurantname : response.data[0].username\n        //     });\n        //     this.setState({\n        //       deliverytype : response.data[0].deliverytype\n        //     });\n        //     localStorage.setItem(\"DeliveryType\",this.state.deliverytype);\n            \n         });    \n\n    }\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.resthome) {\n          var { resthome } = nextProps;\n  }\n  \n  this.setState({\n    dishes: this.state.dishes.concat(resthome)\n  });\n  // console.log(typeof(favourite))\n  \n  }\n  handleCheckout(){\n      //console.log(this.props);\n      const {history} = this.props;\n\t\t  history.push(\"/checkout\");\n   }\n      goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/restdashboard'); \n      }\n\n      gobackFav = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/favourites'); \n      }\n    \n     addtocart = (restid,dishid,dishname,dishprice) =>{\n      \n       const cartvalue = {\n         customerid : localStorage.getItem(\"userid\"),\n         deliverytype :localStorage.getItem(\"deliverytype\"),\n         restaurantid : restid,\n         dishid:dishid,\n         dishname:dishname,\n         dishprice:dishprice,\n         quantity:this.state.quantity,\n         quantityprice :(dishprice * this.state.quantity) \n        }\n        \n          localStorage.setItem(\"dishid\",dishid);\n          localStorage.setItem(\"dishname\",dishname);\n          localStorage.setItem(\"dishprice\",dishprice);\n          localStorage.setItem(\"quantity\",cartvalue.quantity);\n          localStorage.setItem(\"quantityprice\",cartvalue.quantityprice);\n      \n       this.addToCart(cartvalue);\n      //  this.setState({\n      //   show : true \n      // });\n     }\n        handleModalClose(){\n        this.setState({show:!this.state.show}) \n         }\n    addToCart = (data) => {\n      console.log(\"add to cart\")\n      \n      // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //   \"token\");\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/addtocarttable`, data).then((res) => {\n        console.log(\"res.data\")\n        console.log(res.data)\n          if(res.data === \"Delete previous order\"){\n            this.setState({show:\"true\"})\n          }\n          if(res.data === \"Quantity updated\"){\n            this.setState({showfav:\"true\"})\n          }\n        \n          // console.log(\"Status Code : \", res.status);\n          // if (res.status === 200) {\n          //   this.setState({ authFlag: true });\n          // } else {\n          //   this.setState({ authFlag: false });\n          // }\n      });\n\t};\n  handleNewOrder = () => {\n    const data = {\n        customerid : localStorage.getItem(\"userid\"),\n         restaurantid : localStorage.getItem(\"restaurantid\"),\n         dishid:localStorage.getItem(\"dishid\"),\n         dishname:localStorage.getItem(\"dishname\"),\n         dishprice:localStorage.getItem(\"dishprice\"), \n         quantity:localStorage.getItem(\"quantity\"),\n         quantityprice:localStorage.getItem(\"quantityprice\"),\n         deliverytype :localStorage.getItem(\"deliverytype\")\n    }\n    console.log(data)\n    //localStorage.setItem(\"restname\",this.state.restaurantname);\n    // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n    //   \"token\");\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/handleneworder`, data).then((res) => {\n        \n          // if (res.status === 200) {\n          //   this.setState({ authFlag: true });\n          // } else {\n          //   this.setState({ authFlag: false });\n          // }\n      });\n      this.setState({show:!this.state.show}) \n\t};\n    render(){\n      \n      var restaurantdetails = null;\n        var searchresults = null;\n      var messagebox = null;\n        searchresults = \n        <div className='card-list'>\n        {this.state.dishes.map(dish=>\n         <div>\n          <Card style={{ width: '18rem' }}>\n          <Card.Img style={{ width: '18rem',height:'13rem' }} variant=\"top\" src={`${backendServer}${dish.profilepic}`} />\n          <Card.Body>\n          <Card.Title>{dish.dishname}</Card.Title>\n          </Card.Body>\n          \n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>Contains : {dish.ingrediants} </ListGroupItem>\n            <ListGroupItem>Price :  $ {dish.price}</ListGroupItem>\n           \t<ReactTooltip />\n            <Button className=\"cardbtn2\" data-tip=\"Add To Cart\"\n            onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addtocart(this.state.restaurantid,dish._id,dish.dishname,dish.price);\n\t\t\t\t\t\t\t\t\t\t\t}}>\n              <BiCartAlt/></Button>\n          </ListGroup>\n          </Card>                           \n          </div>\n       \n       )\n       }\n\n     </div>\n        \n        restaurantdetails = \n        <div>\n        {this.state.restaurants.map(restaurant=>\n        <div>\n        \n        <img className=\"restimage\" src={`${backendServer}${restaurant.profilepic}`} ></img>\n        <br/>\n        <br/>\n        <h6>{restaurant.description}</h6>\n        </div>\n\n       )\n       }\n        </div>\n   \n    return (\n      \n        <div class=\"container\">\n          \n            <h1>{this.state.restaurantname}</h1>\n            \n          {/* {messagebox} */}\n            {restaurantdetails}\n            {/* <form>\n            <Button onClick = {this.goback}>Search Restaurants</Button>\n            <Button onClick = {this.gobackFav}>Favourites</Button>\n            </form> */}\n            <Row></Row>\n            <hr/>\n            <Row>\n            {searchresults}\n            </Row>\n            <div>\n            <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.show} onHide={()=>this.handleModalClose()} >\n             <Modal.Header closeButton>Create New Order</Modal.Header>\n             <Modal.Body>\n             Your Order contain items from another restaurant.Create a new\n             order to add items from {this.state.restaurantname}\n             </Modal.Body>\n             <Modal.Footer>\n               <Button \n               onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleNewOrder();\n\t\t\t\t\t\t\t\t\t\t\t}}>\n              New Order</Button>\n             </Modal.Footer>\n           </Modal>\n           </div>\n\n\n           <div>\n            <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.showfav} onHide={()=>this.handleModalCloseFav()} >\n             <Modal.Header closeButton></Modal.Header>\n             <Modal.Body>\n             Item added to cart!\n             </Modal.Body>\n             \n           </Modal>\n           </div>\n\n        </div>\n    )\n    }\n   \n}\n \n\nSingleRestDashboard.propTypes = {\n\trestaurantHome: PropTypes.func.isRequired,\n\tresthome: PropTypes.object.isRequired,\n  };\n  \n  const mapStateToProps = (state) => {\n\treturn {\n\t\tresthome: state.resthome.resthome\n\t};\n  };\n  \nexport default connect(mapStateToProps, {restaurantHome})(SingleRestDashboard);\n//export default SingleRestDashboard;"]},"metadata":{},"sourceType":"module"}