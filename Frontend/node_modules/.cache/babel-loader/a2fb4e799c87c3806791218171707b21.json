{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/OrdersPage.js\";\nimport Button from '@restart/ui/esm/Button';\nimport React, { Component } from 'react';\nimport { Modal, Table, Pagination } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\n\nclass OrdersPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPage = e => {\n      this.setState({\n        curPage: e.target.text\n      });\n    };\n\n    this.OnChange = e => {\n      this.setState({\n        pageSize: parseInt(e.target.value, 10)\n      });\n    };\n\n    this.handleChangeOrderType = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.updatestatusfn = (e, valid, otype) => {\n      e.preventDefault();\n      const ordertypedata = {\n        orderid: valid,\n        orderstatus: otype\n      };\n      console.log(ordertypedata);\n      this.updateOrderStatus(ordertypedata);\n    };\n\n    this.handleChange = (e, orderid) => {\n      e.preventDefault();\n      const {\n        restaurantorders\n      } = this.state;\n      const index = restaurantorders.findIndex(order => order._id === orderid);\n      const orders = [...restaurantorders];\n      orders[index].orderstatus = e.target.value;\n      this.setState({\n        restaurantorders: orders\n      });\n    };\n\n    this.handleChangenew = (e, orderid) => {\n      e.preventDefault();\n      const {\n        restaurantorders1\n      } = this.state;\n      const index = restaurantorders1.findIndex(order => order._id === orderid);\n      const orders = [...restaurantorders1];\n      orders[index].orderstatus = e.target.value;\n      this.setState({\n        restaurantorders1: orders\n      });\n    };\n\n    this.updateOrderStatus = ordertypedata => {\n      //console.log(ordertypedata)\n      //  axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //   \"token\"\n      //   );\n      axios.post(`${backendServer}/updateorderstatus`, ordertypedata).then(res => {\n        console.log(\"Order type updated\");\n      });\n    };\n\n    this.handleordersearch = e => {\n      e.preventDefault();\n      this.setState({\n        restaurantorders: []\n      });\n      const ordersearch = {\n        ordermodetype: this.state.ordermodetype,\n        restaurantid: this.state.restaurantid\n      };\n\n      if (this.state.ordermodetype === \"All\") {\n        this.componentDidMount();\n      } else {\n        this.searchOrder(ordersearch);\n      }\n    };\n\n    this.searchOrder = ordersearch => {\n      this.setState({\n        curPage: 1\n      });\n      this.setState({\n        restaurantorders1: []\n      }); //   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //     \"token\"\n      // );\n\n      axios.post(`${backendServer}/handleordermodesearch`, ordersearch).then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            orderstatusmsg: \"searchdone\"\n          }); //this.setState({ orderstatusmsg: \"notfound\" });\n        } // //update the state with the response data\n\n\n        this.setState({\n          restaurantorders1: this.state.restaurantorders1.concat(response.data)\n        });\n      });\n    };\n\n    this.handleChangeOrder = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      showcustprofile: false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid: localStorage.getItem(\"restaurantid\"),\n      dishes: [],\n      dishprice: null,\n      dishname: null,\n      status: null,\n      restaurantorders: [],\n      restaurantorders1: [],\n      orderstatusmsg: null,\n      updatestatus: false,\n      orderstatus: null,\n      orderid: null,\n      ordermsg: null,\n      ordermodetype: null,\n      customerdetails: [],\n      customername: null,\n      customernickname: null,\n      customerabout: null,\n      custprofilepic: null,\n      curPage: 1,\n      pageSize: 5\n    }; //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n\n  handleModalCloseCustView() {\n    this.setState({\n      showcustprofile: !this.state.showcustprofile\n    });\n  }\n\n  viewcustomerprofile(CustId) {\n    this.setState({\n      customerdetails: []\n    });\n    const customerid = {\n      userid: CustId\n    };\n    console.log(customerid); //   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n    //     \"token\"\n    // );\n\n    axios.post(`${backendServer}/getcustomerprofile`, customerid).then(response => {\n      console.log(response.data); //update the state with the response data\n\n      this.setState({\n        customerdetails: this.state.customerdetails.concat(response.data)\n      });\n      this.setState({\n        customername: this.state.customerdetails[0]['username']\n      });\n      this.setState({\n        customernickname: this.state.customerdetails[0]['nickname']\n      });\n      this.setState({\n        customerabout: this.state.customerdetails[0]['about']\n      });\n      this.setState({\n        customerabout: this.state.customerdetails[0]['about']\n      });\n      this.setState({\n        custprofilepic: this.state.customerdetails[0]['profilepic']\n      });\n      console.log(this.state.customerdetails);\n    });\n    this.setState({\n      showcustprofile: true\n    });\n  }\n\n  componentDidMount() {\n    const restaurantid = this.state.restaurantid;\n\n    if (restaurantid) {\n      const val = {\n        restaurantid: restaurantid\n      }; //  axios.defaults.headers.common.authorization = localStorage.getItem('token');\n\n      axios.post(`${backendServer}/getrestaurantorders`, val).then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            orderstatusmsg: \"found\"\n          });\n        } // //update the state with the response data\n\n\n        this.setState({\n          restaurantorders: this.state.restaurantorders.concat(response.data)\n        });\n        console.log(this.state.restaurantorders);\n      });\n    }\n  }\n\n  render() {\n    let paginationItemsTag = [];\n    let items = [];\n\n    if (this.state.orderstatusmsg === \"found\") {\n      items = this.state.restaurantorders;\n    } else if (this.state.orderstatusmsg === \"searchdone\") {\n      items = this.state.restaurantorders1;\n    }\n\n    let pgSize = this.state.pageSize;\n    let count = 1;\n    let num = items.length / pgSize;\n    console.log(items.length / pgSize);\n    console.log(Number.isInteger(items.length / pgSize));\n\n    if (Number.isInteger(num)) {\n      count = num;\n    } else {\n      count = Math.floor(num) + 1;\n    }\n\n    console.log(\"count:\", count);\n    console.log(\"items.length:\", items.length);\n    const active = parseInt(this.state.curPage, 10);\n\n    for (let number = 1; number <= count; number++) {\n      paginationItemsTag.push( /*#__PURE__*/React.createElement(Pagination.Item, {\n        key: number,\n        active: number === active,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, number));\n    }\n\n    let start = parseInt(pgSize * (this.state.curPage - 1));\n    let end = this.state.pageSize + start; //   console.log(\"start: \", start, \", end: \", end);\n\n    let displayitems = [];\n\n    if (end > items.length) {\n      end = items.length;\n    }\n\n    for (start; start < end; start++) {\n      displayitems.push(items[start]);\n    }\n\n    const imgLink = `${backendServer}${this.state.custprofilepic}`;\n    var orderlist = null;\n\n    if (this.state.orderstatusmsg === \"found\") {\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 19\n        }\n      }, displayitems && displayitems.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      }, \"  Orders Received \"), displayitems.map(customerorder => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Table, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"form-control-order\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }\n        }, \"Customer Name : \", customerorder.customername, \"   \", /*#__PURE__*/React.createElement(Button, {\n          onClick: () => {\n            this.viewcustomerprofile(customerorder.userid);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 80\n          }\n        }, \"View Profile\"), \" \"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }\n        }, \"Date : \", customerorder.datetime, \" . \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 67\n          }\n        }), \" Total Items : \", customerorder.totalorderquantity, \" item(s).\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 130\n          }\n        }), \" Total Price : $\", customerorder.totalorderprice), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }\n        }, \"Order Status : \", customerorder.orderstatus, \" \"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }\n        }, customerorder.ordertype === \"Pick Up\" && /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 33\n          }\n        }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n          name: \"orderstatus\",\n          value: customerorder.orderstatus,\n          onChange: e => {\n            this.handleChange(e, customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Order Received\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 37\n          }\n        }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Preparing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 37\n          }\n        }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Pick up Ready\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 37\n          }\n        }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Picked up\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 37\n          }\n        }, \"Picked up\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Cancelled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 37\n          }\n        }, \"Cancel Order\")), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          onClick: e => {\n            this.updatestatusfn(e, customerorder._id, customerorder.orderstatus);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }\n        }, \"Update\")), customerorder.ordertype === \"Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 33\n          }\n        }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n          name: \"orderstatus\",\n          value: customerorder.orderstatus,\n          onChange: e => {\n            this.handleChange(e, customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Order Received\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 37\n          }\n        }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Preparing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 37\n          }\n        }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"On the way\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 37\n          }\n        }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Delivered\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 37\n          }\n        }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Cancelled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 37\n          }\n        }, \"Cancel Order\")), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          onClick: e => {\n            this.updatestatusfn(e, customerorder._id, customerorder.orderstatus);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 35\n          }\n        }, \"Update\")), customerorder.ordertype === \"Pick Up and Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }\n        }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n          name: \"orderstatus\",\n          value: customerorder.orderstatus,\n          onChange: e => {\n            this.handleChange(e, customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Order Received\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 37\n          }\n        }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Preparing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 37\n          }\n        }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"On the way\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 37\n          }\n        }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Delivered\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 37\n          }\n        }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Pick up Ready\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 37\n          }\n        }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Picked up\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 37\n          }\n        }, \"Picked up\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Cancelled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 37\n          }\n        }, \"Cancel Order\")), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          onClick: e => {\n            this.updatestatusfn(e, customerorder._id, customerorder.orderstatus);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 35\n          }\n        }, \"Update\"))))))));\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 26\n        }\n      }, \"No Recent Orders \")));\n    }\n\n    if (this.state.orderstatusmsg === \"searchdone\") {\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 17\n        }\n      }, displayitems && displayitems.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 19\n        }\n      }, \"  Orders Received \"), displayitems.map(customerorder => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Table, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"form-control-order\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 27\n          }\n        }, \"Customer Name : \", customerorder.customername, \"   \", /*#__PURE__*/React.createElement(Button, {\n          onClick: () => {\n            this.viewcustomerprofile(customerorder.userid);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 78\n          }\n        }, \"View Profile\"), \" \"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 27\n          }\n        }, \"Date : \", customerorder.datetime, \" . \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 65\n          }\n        }), \" Total Items : \", customerorder.totalorderquantity, \" item(s).\", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 128\n          }\n        }), \" Total Price : $\", customerorder.totalorderprice), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 27\n          }\n        }, \"Order Status : \", customerorder.orderstatus, \" \"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 27\n          }\n        }, customerorder.ordertype === \"Pick Up\" && /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 31\n          }\n        }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n          name: \"orderstatus\",\n          value: customerorder.orderstatus,\n          onChange: e => {\n            this.handleChangenew(e, customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Order Received\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 35\n          }\n        }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Preparing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 35\n          }\n        }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Pick up Ready\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 35\n          }\n        }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Picked up\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 35\n          }\n        }, \"Picked up\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Cancelled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 35\n          }\n        }, \"Cancel Order\")), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          onClick: e => {\n            this.updatestatusfn(e, customerorder._id, customerorder.orderstatus);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 31\n          }\n        }, \"Update\")), customerorder.ordertype === \"Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 31\n          }\n        }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n          name: \"orderstatus\",\n          value: customerorder.orderstatus,\n          onChange: e => {\n            this.handleChangenew(e, customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Order Received\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 35\n          }\n        }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Preparing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 35\n          }\n        }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"On the way\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 35\n          }\n        }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Delivered\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 35\n          }\n        }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Cancelled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 35\n          }\n        }, \"Cancel Order\")), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          onClick: e => {\n            this.updatestatusfn(e, customerorder._id, customerorder.orderstatus);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 33\n          }\n        }, \"Update\")), customerorder.ordertype === \"Pick Up and Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 31\n          }\n        }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n          name: \"orderstatus\",\n          value: customerorder.orderstatus,\n          onChange: e => {\n            this.handleChangenew(e, customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Order Received\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 35\n          }\n        }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Preparing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 35\n          }\n        }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"On the way\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 35\n          }\n        }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Delivered\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 35\n          }\n        }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Pick up Ready\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 35\n          }\n        }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Picked up\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 35\n          }\n        }, \"Picked up\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"Cancelled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 35\n          }\n        }, \"Cancel Order\")), /*#__PURE__*/React.createElement(Button, {\n          type: \"submit\",\n          onClick: e => {\n            this.updatestatusfn(e, customerorder._id, customerorder.orderstatus);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 33\n          }\n        }, \"Update\"))))))));\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 24\n        }\n      }, \"No Recent Orders \")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 12\n      }\n    }, \"Order Type :\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"ordermodetype\",\n      value: this.state.ordermodetype,\n      onChange: this.handleChangeOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 16\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"New Order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 16\n      }\n    }, \"New Order\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Delivered Order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 16\n      }\n    }, \"Delivered Order\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cancelled Order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }\n    }, \"Cancelled Order\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleordersearch,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 7\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 13\n      }\n    }, \"Page Size :\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        width: '3rem'\n      },\n      value: this.state.pageSize,\n      onChange: this.OnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }\n    }, \"10\"))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }\n    }, \" \", orderlist, \" \"), /*#__PURE__*/React.createElement(Pagination, {\n      onClick: this.onPage,\n      style: {\n        display: \"inline-flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }\n    }, paginationItemsTag), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.showcustprofile,\n      onHide: () => this.handleModalCloseCustView(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 40\n      }\n    }, \"Customer Profile\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"form-control-order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: imgLink,\n      alt: \"No image added. Add Image.\",\n      style: {\n        maxHeight: '5rem',\n        maxWidth: '10rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 21\n      }\n    }, \" Name : \", this.state.customername), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 21\n      }\n    }, \" Nick Name : \", this.state.customernickname), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 21\n      }\n    }, \" About: \", this.state.customerabout))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default OrdersPage;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/OrdersPage.js"],"names":["Button","React","Component","Modal","Table","Pagination","axios","backendServer","OrdersPage","constructor","props","onPage","e","setState","curPage","target","text","OnChange","pageSize","parseInt","value","handleChangeOrderType","name","updatestatusfn","valid","otype","preventDefault","ordertypedata","orderid","orderstatus","console","log","updateOrderStatus","handleChange","restaurantorders","state","index","findIndex","order","_id","orders","handleChangenew","restaurantorders1","post","then","res","handleordersearch","ordersearch","ordermodetype","restaurantid","componentDidMount","searchOrder","response","data","length","orderstatusmsg","concat","handleChangeOrder","showcustprofile","customerid","localStorage","getItem","dishes","dishprice","dishname","status","updatestatus","ordermsg","customerdetails","customername","customernickname","customerabout","custprofilepic","handleModalCloseCustView","viewcustomerprofile","CustId","userid","val","render","paginationItemsTag","items","pgSize","count","num","Number","isInteger","Math","floor","active","number","push","start","end","displayitems","imgLink","orderlist","map","customerorder","datetime","totalorderquantity","totalorderprice","ordertype","width","display","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["\nimport Button from '@restart/ui/esm/Button';\nimport React, {Component} from 'react'\nimport {Modal,Table,Pagination} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\nclass OrdersPage extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n     this.state = {\n      \n      \n      showcustprofile:false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid : localStorage.getItem(\"restaurantid\"),\n      dishes : [],\n      dishprice : null,\n      dishname:null,\n      status :null,\n      restaurantorders : [],\n      restaurantorders1 : [],\n      orderstatusmsg:null,\n      updatestatus:false,\n      orderstatus:null,\n      orderid:null,\n      ordermsg:null,\n      ordermodetype:null,\n      customerdetails:[],\n      customername:null,\n      customernickname:null,\n      customerabout:null,\n      custprofilepic:null,\n      curPage: 1,\n      pageSize: 5,\n  \n    }\n     //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n  onPage = (e) => {\n    this.setState({\n      curPage: e.target.text,\n    });\n  };\n  OnChange = (e) => {\n    this.setState({\n      pageSize: parseInt(e.target.value, 10),\n    });\n  };\n  \n    handleModalCloseCustView(){\n        this.setState({showcustprofile:!this.state.showcustprofile}) \n    }  \n   \n      viewcustomerprofile(CustId){\n        this.setState({\n          customerdetails: [],\n        });\n        const customerid = {\n          userid: CustId\n        };\n        console.log(customerid)\n      //   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //     \"token\"\n      // );\n        axios.post(`${backendServer}/getcustomerprofile`,customerid).then((response) => {\n          console.log(response.data);\n          \n          //update the state with the response data\n          this.setState({\n            customerdetails: this.state.customerdetails.concat(response.data),\n          });\n          this.setState({\n            customername: this.state.customerdetails[0]['username'],\n          });\n          this.setState({\n            customernickname: this.state.customerdetails[0]['nickname'],\n          });\n          this.setState({\n            customerabout: this.state.customerdetails[0]['about'],\n          });\n          this.setState({\n            customerabout: this.state.customerdetails[0]['about'],\n          });\n          this.setState({\n            custprofilepic: this.state.customerdetails[0]['profilepic'],\n          });\n          console.log(this.state.customerdetails)\n        });\n        this.setState({\n          showcustprofile : true \n        });\n      }\n componentDidMount() {\n      \n        const restaurantid = this.state.restaurantid;\n\t    if(restaurantid){\n            const val = {\n                restaurantid:restaurantid\n            }\n\n          //  axios.defaults.headers.common.authorization = localStorage.getItem('token');\n          axios.post(`${backendServer}/getrestaurantorders`,val).then((response) => {\n              \n                if(response.data.length > 0){\n                    this.setState({ orderstatusmsg: \"found\" });\n                }\n                // //update the state with the response data\n                this.setState({\n                restaurantorders: this.state.restaurantorders.concat(response.data),\n                });\n                console.log(this.state.restaurantorders)\n                \n            });\n\n        }\n       \n\t}\nhandleChangeOrderType = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        }\n\n updatestatusfn = (e,valid,otype) =>{\n   e.preventDefault();\n  \n   const ordertypedata = {\n     orderid : valid,\n     orderstatus : otype\n   }\n   console.log(ordertypedata)\n   this.updateOrderStatus(ordertypedata);\n   \n }\n\n\nhandleChange = (e, orderid) => {\n  e.preventDefault();\n    const { restaurantorders } = this.state;\n    const index = restaurantorders.findIndex((order) => order._id === orderid);\n    const orders = [...restaurantorders];\n    orders[index].orderstatus = e.target.value;\n    this.setState({ restaurantorders: orders });\n  }\n  handleChangenew = (e, orderid) => {\n    e.preventDefault();\n      const { restaurantorders1 } = this.state;\n      const index = restaurantorders1.findIndex((order) => order._id === orderid);\n      const orders = [...restaurantorders1];\n      orders[index].orderstatus = e.target.value;\n      this.setState({ restaurantorders1: orders });\n    }\n\n updateOrderStatus = (ordertypedata)=>{\n   //console.log(ordertypedata)\n  //  axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n  //   \"token\"\n  //   );\n    axios.post(`${backendServer}/updateorderstatus`, ordertypedata)\n            .then(res => {\n                console.log(\"Order type updated\")\n            })\n            \n }\nhandleordersearch = (e) => {\n  e.preventDefault();\n   this.setState({\n      restaurantorders: []\n    });\n    const ordersearch = {\n    ordermodetype : this.state.ordermodetype,\n    restaurantid : this.state.restaurantid\n    }\n \n    if(this.state.ordermodetype === \"All\"){\n      this.componentDidMount();\n    }else\n    {\n      this.searchOrder(ordersearch);\n    }\n    \n\n}\n\nsearchOrder = (ordersearch) => {\n  this.setState({curPage : 1})\n  this.setState ({restaurantorders1 : [] })\n  //   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n  //     \"token\"\n  // );\n    axios.post(`${backendServer}/handleordermodesearch`,ordersearch).then((response) => {\n                    if(response.data.length > 0){\n                        this.setState({ orderstatusmsg: \"searchdone\" });\n                        //this.setState({ orderstatusmsg: \"notfound\" });\n                    }\n                    // //update the state with the response data\n                     this.setState({\n                      restaurantorders1: this.state.restaurantorders1.concat(response.data),\n                      });\n                      \n                    \n    });\n}\n\n handleChangeOrder = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n    render(){\n\n      let paginationItemsTag = []; let items = [];\n      if(this.state.orderstatusmsg === \"found\") {\n        items = this.state.restaurantorders;\n       \n      }else if(this.state.orderstatusmsg === \"searchdone\" ){\n        items = this.state.restaurantorders1;\n\n      }\n      let pgSize = this.state.pageSize;\n      \n      let count = 1;\n      let num = items.length / pgSize;\n      console.log(items.length / pgSize);\n      console.log(Number.isInteger(items.length / pgSize));\n      if (Number.isInteger(num)) {\n        count = num;\n      } else {\n        count = Math.floor(num) + 1;\n      }\n      console.log(\"count:\", count);\n    console.log(\"items.length:\", items.length);\n\n    const active = parseInt(this.state.curPage, 10);\n\n    for (let number = 1; number <= count; number++) {\n      paginationItemsTag.push(\n        <Pagination.Item key={number} active={number === active}>\n          {number}\n        </Pagination.Item>\n      );\n    }\n        let start = parseInt(pgSize * (this.state.curPage - 1));\n        let end = this.state.pageSize + start;\n        //   console.log(\"start: \", start, \", end: \", end);\n        let displayitems = [];\n        if (end > items.length) {\n          end = items.length;\n        }\n        for (start; start < end; start++) {\n          displayitems.push(items[start]);\n        }\n        const imgLink = `${backendServer}${this.state.custprofilepic}`;\n      \n       \tvar orderlist = null;\n              if(this.state.orderstatusmsg === \"found\") {\n                orderlist = ( \n                  <div>\n                     {displayitems && displayitems.length > 0 ? (\n                       <div>\n                    <h1>  Orders Received </h1>\n                    {displayitems.map((customerorder) => {\n                          return (\n                  <div>\n                   \n                      <div>\n                      \n                        <Table>\n                          <thead>\n                          <tr className=\"form-control-order\">\n                            <th>Customer Name : {customerorder.customername}   <Button onClick={() => {\n                                  this.viewcustomerprofile(customerorder.userid);\n                                  }}>View Profile</Button> </th>\n          \n                            <th>Date : {customerorder.datetime} . <br/> Total Items : {customerorder.totalorderquantity} item(s).<br/> Total Price : ${customerorder.totalorderprice}</th>\n                            <th>Order Status : {customerorder.orderstatus} </th>\n                            <th>{\n                              customerorder.ordertype === \"Pick Up\" && (\n                                <form >\n                                Status Type :\n                                  <select  name=\"orderstatus\"  value={customerorder.orderstatus} onChange={(e) => { this.handleChange(e, customerorder._id)}} >\n                                    <option value=\"Order Received\" >Order Received</option>\n                                    <option value=\"Preparing\">Preparing</option>\n                                    <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                    <option value=\"Picked up\" >Picked up</option>\n                                    <option value=\"Cancelled\" >Cancel Order</option>\n                                  </select>\n                                <Button \n                                type=\"submit\" \n                                  onClick={(e) => {\n                                  this.updatestatusfn(e,customerorder._id,customerorder.orderstatus);\n                                  }}>\n                                  Update\n                                </Button>\n                              </form>\n                              )\n                              }  \n                              {\n                              customerorder.ordertype === \"Delivery\" && (\n                                <form >\n                                Status Type :\n                                  <select  name=\"orderstatus\"   value={customerorder.orderstatus} onChange={(e) => { this.handleChange(e, customerorder._id)}} >\n                                    <option value=\"Order Received\" >Order Received</option>\n                                    <option value=\"Preparing\"  >Preparing</option>\n                                    <option value=\"On the way\" >On the way</option>\n                                    <option value=\"Delivered\" >Delivered</option>\n                                    <option value=\"Cancelled\" >Cancel Order</option>\n                                  </select>\n                                  <Button \n                                type=\"submit\" \n                                  onClick={(e) => {\n                                  this.updatestatusfn(e,customerorder._id,customerorder.orderstatus);\n                                  }}>\n                                  Update\n                                </Button>\n                              </form>\n                              )\n                              }  \n                              {\n                              customerorder.ordertype === \"Pick Up and Delivery\" && (\n                                <form >\n                                Status Type :\n                                  <select  name=\"orderstatus\"   value={customerorder.orderstatus} onChange={(e) => { this.handleChange(e, customerorder._id)}} >\n                                    <option value=\"Order Received\" >Order Received</option>\n                                    <option value=\"Preparing\"  >Preparing</option>\n                                    <option value=\"On the way\" >On the way</option>\n                                    <option value=\"Delivered\" >Delivered</option>\n                                    <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                    <option value=\"Picked up\" >Picked up</option>\n                                    <option value=\"Cancelled\" >Cancel Order</option>\n                                  </select>\n                                  <Button \n                                type=\"submit\" \n                                  onClick={(e) => {\n                                  this.updatestatusfn(e,customerorder._id,customerorder.orderstatus);\n                                  }}>\n                                  Update\n                                </Button>\n                              </form>\n                              )\n                              }  \n                            </th>\n                          \n                          \n                          </tr>\n                        </thead>\n                        </Table>\n                        \n                        \n                      </div>\n                  </div>\n                  )})}\n                    </div>\n                     ):\n                     (\n                       <div>\n                         <h4 className=\"\">No Recent Orders </h4>\n                         </div>\n                     )\n                     }\n                </div>\n                );\n            }\n            if(this.state.orderstatusmsg === \"searchdone\"){\n              orderlist = ( \n                <div>\n                   {displayitems && displayitems.length > 0 ? (\n                     <div>\n                  <h1>  Orders Received </h1>\n                  {displayitems.map((customerorder) => {\n                        return (\n                <div>\n                 \n                    <div>\n                    \n                      <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>Customer Name : {customerorder.customername}   <Button onClick={() => {\n                                this.viewcustomerprofile(customerorder.userid);\n                                }}>View Profile</Button> </th>\n        \n                          <th>Date : {customerorder.datetime} . <br/> Total Items : {customerorder.totalorderquantity} item(s).<br/> Total Price : ${customerorder.totalorderprice}</th>\n                          <th>Order Status : {customerorder.orderstatus} </th>\n                          <th>{\n                            customerorder.ordertype === \"Pick Up\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"  value={customerorder.orderstatus} onChange={(e) => { this.handleChangenew(e, customerorder._id)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\">Preparing</option>\n                                  <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                  <option value=\"Picked up\" >Picked up</option>\n                                  <option value=\"Cancelled\" >Cancel Order</option>\n                                </select>\n                              <Button \n                              type=\"submit\" \n                                onClick={(e) => {\n                                this.updatestatusfn(e,customerorder._id,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                            {\n                            customerorder.ordertype === \"Delivery\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"   value={customerorder.orderstatus} onChange={(e) => { this.handleChangenew(e, customerorder._id)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\"  >Preparing</option>\n                                  <option value=\"On the way\" >On the way</option>\n                                  <option value=\"Delivered\" >Delivered</option>\n                                  <option value=\"Cancelled\" >Cancel Order</option>\n                                </select>\n                                <Button \n                              type=\"submit\" \n                                onClick={(e) => {\n                                this.updatestatusfn(e,customerorder._id,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                            {\n                            customerorder.ordertype === \"Pick Up and Delivery\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"   value={customerorder.orderstatus} onChange={(e) => { this.handleChangenew(e, customerorder._id)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\"  >Preparing</option>\n                                  <option value=\"On the way\" >On the way</option>\n                                  <option value=\"Delivered\" >Delivered</option>\n                                  <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                  <option value=\"Picked up\" >Picked up</option>\n                                  <option value=\"Cancelled\" >Cancel Order</option>\n                                </select>\n                                <Button \n                              type=\"submit\" \n                                onClick={(e) => {\n                                this.updatestatusfn(e,customerorder._id,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                          </th>\n                        \n                        \n                        </tr>\n                      </thead>\n                      </Table>\n                      \n                      \n                    </div>\n                </div>\n                )})}\n                  </div>\n                   ):\n                   (\n                     <div>\n                       <h4 className=\"\">No Recent Orders </h4>\n                       </div>\n                   )\n                   }\n              </div>\n              );\n            \n            }\n            \n     \n    return (\n        <div className=\"container\" >\n          <div>\n           <form >\n\t\t\t\t\t\t Order Type :\n            \t<select  name=\"ordermodetype\"   value={this.state.ordermodetype} onChange={this.handleChangeOrder}>\n              \t<option value=\"All\">All</option> \n              \t<option value=\"New Order\" >New Order</option>\n              \t<option value=\"Delivered Order\"  >Delivered Order</option>\n                <option value=\"Cancelled Order\"  >Cancelled Order</option>\n            \t</select>\n              \n\t\t\t\t\t\t<Button onClick={this.handleordersearch} type=\"submit\">\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n            <div className=\"pageSelect\">\n                Page Size :\n          <select style={{width:'3rem'}} value={this.state.pageSize} onChange={this.OnChange}>\n                <option>2</option>\n                <option>5</option>\n                <option>10</option>\n          </select>\n          </div>\n\t\t\t\t\t</form>\n          </div>\n\n          <br/><br/><br/>\n          <div> {orderlist} </div> \n          \n          <Pagination\n                    onClick={this.onPage}\n                    style={{ display: \"inline-flex\" }}>\n                    {paginationItemsTag}\n          </Pagination>\n      <div>\n         <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.showcustprofile} onHide={()=>this.handleModalCloseCustView()}>\n             <Modal.Header closeButton><h4>Customer Profile</h4></Modal.Header>\n             <Modal.Body>\n\n             <Table>\n                <thead>\n                  <tr className=\"form-control-order\">\n                    <th> <img src={imgLink} alt=\"No image added. Add Image.\" style={{ maxHeight: '5rem', maxWidth: '10rem' }} /></th>\n                    <th> Name : {this.state.customername}</th>\n                    <th> Nick Name : {this.state.customernickname}</th>\n                    <th> About: {this.state.customerabout}</th>\n                  </tr>\n                </thead>\n              </Table>     \n             </Modal.Body>\n             <Modal.Footer>\n              \n             </Modal.Footer>\n           </Modal>\n      </div>\n      {/* <Button className=\"btn-logout\" onClick={this.logout}>Logout</Button> */}\n       </div>\n    )\n    }\n}\n\nexport default OrdersPage\n"]},"metadata":{},"sourceType":"module"}