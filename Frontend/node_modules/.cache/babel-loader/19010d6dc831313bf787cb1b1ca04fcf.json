{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/CustomerOrder.js\";\nimport Button from '@restart/ui/esm/Button';\nimport React, { Component } from 'react';\nimport { Modal, Table, Row, Col, Pagination } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\n\nclass CustomerOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/customerhome');\n    };\n\n    this.onPage = e => {\n      // console.log(\"In pagination\");\n      // console.log(e.target);\n      // console.log(e.target.text);\n      this.setState({\n        curPage: e.target.text\n      });\n    };\n\n    this.OnChange = e => {\n      this.setState({\n        pageSize: parseInt(e.target.value, 10)\n      });\n    };\n\n    this.viewreceipt = val => {\n      this.setState({\n        show: true\n      });\n      this.setState({\n        receiptdetails: []\n      });\n      const receiptval = {\n        orderid: val\n      }; // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n\n      axios.post(`${backendServer}/getorderreceipt`, receiptval).then(response => {\n        console.log(\"response\");\n        console.log(response.data[0]);\n        this.setState({\n          receiptdetails: this.state.receiptdetails.concat(response.data[0].orderdetails)\n        });\n        this.setState({\n          note: response.data[0].note\n        });\n        this.setState({\n          totalamount: response.data[0].totalorderprice\n        });\n        this.setState({\n          totalquantity: response.data[0].totalorderquantity\n        });\n      });\n    };\n\n    this.searchOrder = ordersearch => {\n      this.setState({\n        curPage: 1\n      });\n      this.setState({\n        customerorders1: []\n      }); //   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //     \"token\"\n      // );\n\n      axios.post(`${backendServer}/handleordersearch`, ordersearch).then(response => {\n        console.log(\"here\");\n\n        if (response.data.length > 0) {\n          this.setState({\n            ordermsg: \"searchdone\"\n          });\n          this.setState({\n            orderstatusmsg: \"notfound\"\n          });\n        } // //update the state with the response data\n\n\n        this.setState({\n          customerorders1: this.state.customerorders1.concat(response.data)\n        }); //console.log(this.state.customerorders)\n      });\n    };\n\n    this.cancelOrder = val => {\n      console.log(\"Cancel order\");\n      console.log(val);\n      const {\n        customerorders\n      } = this.state;\n      const index = customerorders.findIndex(order => order._id === val);\n      const orders = [...customerorders];\n      orders[index].orderstatus = \"Cancel Order\";\n      this.setState({\n        customerorders: orders\n      });\n      const orderStatusData = {\n        orderid: val,\n        orderstatus: \"Cancelled\"\n      }; //console.log(ordertypedata)\n\n      this.updateOrderStatus(orderStatusData);\n    };\n\n    this.cancelOrder1 = val => {\n      console.log(\"Cancel order\");\n      console.log(val);\n      const {\n        customerorders1\n      } = this.state;\n      const index = customerorders1.findIndex(order => order._id === val);\n      const orders = [...customerorders1];\n      orders[index].orderstatus = \"Cancel Order\";\n      this.setState({\n        customerorders1: orders\n      });\n      const orderStatusData = {\n        orderid: val,\n        orderstatus: \"Cancelled\"\n      }; //console.log(ordertypedata)\n\n      this.updateOrderStatus(orderStatusData);\n    };\n\n    this.updateOrderStatus = orderStatusData => {\n      // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //   \"token\");\n      axios.post(`${backendServer}/updateorderstatus`, orderStatusData).then(res => {\n        console.log(\"Order type updated\");\n      });\n    };\n\n    this.handleordersearch = e => {\n      e.preventDefault();\n      this.setState({\n        customerorders: []\n      });\n      const ordersearch = {\n        orderstatus: this.state.orderstatus,\n        customerid: this.state.customerid\n      };\n      console.log(\"ordersearch\");\n      console.log(ordersearch);\n\n      if (this.state.orderstatus === \"All\") {\n        this.componentDidMount();\n      }\n\n      this.searchOrder(ordersearch);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      show: false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid: localStorage.getItem(\"restid\"),\n      dishes: [],\n      dishprice: null,\n      dishname: null,\n      status: null,\n      customerorders: [],\n      customerorders1: [],\n      customerordersearch: [],\n      orderstatusmsg: null,\n      receiptdetails: [],\n      orderstatus: null,\n      ordermsg: null,\n      note: null,\n      totalamount: null,\n      totalquantity: null,\n      curPage: 1,\n      pageSize: 5\n    }; //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  componentDidMount() {\n    const customerid = this.state.customerid;\n\n    if (customerid) {\n      const val = {\n        customerid: customerid\n      }; // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n\n      axios.post(`${backendServer}/getitemsfromorders`, val).then(response => {\n        console.log(response.data);\n\n        if (response.data.length > 0) {\n          this.setState({\n            orderstatusmsg: \"found\"\n          }); // //update the state with the response data\n\n          this.setState({\n            customerorders: this.state.customerorders.concat(response.data)\n          });\n        } // console.log(this.state.customerorders)\n        // console.log(this.state.orderstatusmsg)\n\n      });\n    }\n  }\n\n  render() {\n    let paginationItemsTag = [];\n    let items = [];\n\n    if (this.state.orderstatusmsg === \"found\") {\n      console.log(\"no\");\n      items = this.state.customerorders;\n      console.log(this.state.customerorders);\n      console.log(\"no\");\n    } else if (this.state.ordermsg === \"searchdone\") {\n      console.log(\"done\");\n      items = this.state.customerorders1;\n      console.log(this.state.customerorders1);\n      console.log(\"done\");\n    }\n\n    let pgSize = this.state.pageSize;\n    let count = 1;\n    let num = items.length / pgSize;\n    console.log(items.length / pgSize);\n    console.log(Number.isInteger(items.length / pgSize));\n\n    if (Number.isInteger(num)) {\n      count = num;\n    } else {\n      count = Math.floor(num) + 1;\n    } //   console.log(\"count:\", count);\n    // console.log(\"items.length:\", items.length);\n\n\n    const active = parseInt(this.state.curPage, 10);\n\n    for (let number = 1; number <= count; number++) {\n      paginationItemsTag.push( /*#__PURE__*/React.createElement(Pagination.Item, {\n        key: number,\n        active: number === active,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, number));\n    }\n\n    let start = parseInt(pgSize * (this.state.curPage - 1));\n    let end = this.state.pageSize + start; //   console.log(\"start: \", start, \", end: \", end);\n\n    let displayitems = [];\n\n    if (end > items.length) {\n      end = items.length;\n    }\n\n    for (start; start < end; start++) {\n      displayitems.push(items[start]);\n    }\n\n    var orderlist = null;\n\n    if (this.state.orderstatusmsg === \"found\") {\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 19\n        }\n      }, displayitems && displayitems.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      }, displayitems.map(customerorder => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Table, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"form-control-order\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 28\n          }\n        }, customerorder.restaurantname, \"  \", /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 64\n          }\n        }, customerorder.orderstatus))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 28\n          }\n        }, \" \", customerorder.orderstatus === \"Order Received\" ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 84\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: () => {\n            this.cancelOrder(customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 30\n          }\n        }, \"Cancel Order\")) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 37\n          }\n        }), \" \")))), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 27\n          }\n        }, customerorder.totalorderquantity, \" items for $\", customerorder.totalorderprice, \" . \", customerorder.datetime, \".\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 27\n          }\n        }, \"Special Instructions : \", customerorder.note), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: () => {\n            this.viewreceipt(customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 31\n          }\n        }, \"View Receipt\"))))));\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 19\n        }\n      }, \"No Recent Orders \")));\n    }\n\n    if (this.state.ordermsg === \"searchdone\") {\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 19\n        }\n      }, displayitems && displayitems.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 23\n        }\n      }, displayitems.map(customerorder => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Table, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"thead\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"form-control-order\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 28\n          }\n        }, customerorder.restaurantname, \"  \", /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 64\n          }\n        }, customerorder.orderstatus))), /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 28\n          }\n        }, \" \", customerorder.orderstatus === \"Order Received\" ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 84\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: () => {\n            this.cancelOrder1(customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 30\n          }\n        }, \"Cancel Order\")) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 37\n          }\n        }), \" \")))), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 27\n          }\n        }, customerorder.totalorderquantity, \" items for $\", customerorder.totalorderprice, \" . \", customerorder.datetime, \".\"), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 27\n          }\n        }, \"Special Instructions : \", customerorder.note), /*#__PURE__*/React.createElement(\"th\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: () => {\n            this.viewreceipt(customerorder._id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 31\n          }\n        }, \"View Receipt\"))))));\n      })) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 19\n        }\n      }, \"No Recent Orders \")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 12\n      }\n    }, \"Order Type :\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"orderstatus\",\n      value: this.state.orderstatus,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 16\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Order Received\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 16\n      }\n    }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Preparing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 16\n      }\n    }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"On the way\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 16\n      }\n    }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Delivered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Pick up Ready\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Picked up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, \"Picked up\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cancelled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }\n    }, \"Cancelled Order\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleordersearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 7\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }, \"Page Size :\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        width: '3rem'\n      },\n      value: this.state.pageSize,\n      onChange: this.OnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }\n    }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }, \"10\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }, \" \", orderlist, \" \"), /*#__PURE__*/React.createElement(Pagination, {\n      onClick: this.onPage,\n      style: {\n        display: \"inline-flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, paginationItemsTag), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 40\n      }\n    }, \" Receipt\")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 27\n      }\n    }, \"Total Amount : $\", this.state.totalamount)), /*#__PURE__*/React.createElement(Col, {\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 27\n      }\n    }, \"Total Qty : \", this.state.totalquantity))), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 16\n      }\n    }, this.state.receiptdetails.map(receiptdetail => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 19\n      }\n    }, receiptdetail.quantity, \" \"), /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 19\n      }\n    }, receiptdetail.dishname), /*#__PURE__*/React.createElement(Col, {\n      sm: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 19\n      }\n    }, \"$\", receiptdetail.dishprice)))))), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 15\n      }\n    }, \"Added Note : \", this.state.note), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default CustomerOrder;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/CustomerOrder.js"],"names":["Button","React","Component","Modal","Table","Row","Col","Pagination","axios","backendServer","CustomerOrder","constructor","props","goback","e","preventDefault","history","push","onPage","setState","curPage","target","text","OnChange","pageSize","parseInt","value","viewreceipt","val","show","receiptdetails","receiptval","orderid","post","then","response","console","log","data","state","concat","orderdetails","note","totalamount","totalorderprice","totalquantity","totalorderquantity","searchOrder","ordersearch","customerorders1","length","ordermsg","orderstatusmsg","cancelOrder","customerorders","index","findIndex","order","_id","orders","orderstatus","orderStatusData","updateOrderStatus","cancelOrder1","res","handleordersearch","customerid","componentDidMount","handleChange","name","localStorage","getItem","restaurantid","dishes","dishprice","dishname","status","customerordersearch","handleModalClose","render","paginationItemsTag","items","pgSize","count","num","Number","isInteger","Math","floor","active","number","start","end","displayitems","orderlist","map","customerorder","restaurantname","datetime","width","display","receiptdetail","quantity"],"mappings":"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","sourcesContent":["\nimport Button from '@restart/ui/esm/Button';\nimport React, {Component} from 'react'\nimport {Modal,Table,Row,Col,Pagination} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\n\n\nclass CustomerOrder extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n     this.state = {\n      \n      show: false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid : localStorage.getItem(\"restid\"),\n      dishes : [],\n      dishprice : null,\n      dishname:null,\n      status :null,\n      customerorders : [],\n      customerorders1 : [],\n      customerordersearch : [],\n      orderstatusmsg:null,\n      receiptdetails:[],\n      orderstatus:null,\n      ordermsg:null,\n      note:null,\n      totalamount:null,\n      totalquantity:null,\n      curPage: 1,\n      pageSize: 5,\n  \n    }\n     //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n    goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/customerhome'); \n      }\n      onPage = (e) => {\n        // console.log(\"In pagination\");\n        // console.log(e.target);\n        // console.log(e.target.text);\n        this.setState({\n          curPage: e.target.text,\n        });\n      };\n    \n      OnChange = (e) => {\n        this.setState({\n          pageSize: parseInt(e.target.value, 10),\n        });\n      };\n  handleModalClose(){\n      this.setState({show:!this.state.show}) \n        }\n    viewreceipt= (val) =>{\n      this.setState({show:true});\n       this.setState({\n            receiptdetails : [] \n          });\n      const receiptval = {\n                orderid:val\n            }\n            \n           // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n       axios.post(`${backendServer}/getorderreceipt`,receiptval).then((response) => {\n        console.log(\"response\")\n        console.log(response.data[0])\n         this.setState({\n            receiptdetails : this.state.receiptdetails.concat(response.data[0].orderdetails) \n          });\n          this.setState({\n            note:response.data[0].note\n          })\n          this.setState({\n            totalamount:response.data[0].totalorderprice\n          })\n          this.setState({\n            totalquantity:response.data[0].totalorderquantity\n          })\n       });\n\n    }\n       \n componentDidMount() {\n     \n      const customerid = this.state.customerid;\n\t    if(customerid){\n            const val = {\n                customerid:customerid\n            }\n           // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n          axios.post(`${backendServer}/getitemsfromorders`,val).then((response) => {\n               console.log(response.data)\n                if(response.data.length > 0){\n                    this.setState({ orderstatusmsg: \"found\" });\n               \n                // //update the state with the response data\n                this.setState({\n                customerorders: this.state.customerorders.concat(response.data),\n                });\n              }\n                // console.log(this.state.customerorders)\n                // console.log(this.state.orderstatusmsg)\n            });\n\n        }\n       \n\t}\nsearchOrder = (ordersearch) => {\n  this.setState({curPage : 1})\n  this.setState ({customerorders1 : [] })\n//   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n//     \"token\"\n// );\n    axios.post(`${backendServer}/handleordersearch`,ordersearch).then((response) => {\n      console.log(\"here\")\n                    if(response.data.length > 0){\n                        this.setState({ ordermsg: \"searchdone\" });\n                        this.setState({ orderstatusmsg: \"notfound\" });\n                    }\n                    // //update the state with the response data\n                     this.setState({\n                      customerorders1: this.state.customerorders1.concat(response.data),\n                      });\n                      //console.log(this.state.customerorders)\n                    \n    });\n}\ncancelOrder = (val) => {\n    console.log(\"Cancel order\")\n    console.log(val)\n    const { customerorders } = this.state;\n    const index = customerorders.findIndex((order) => order._id === val);\n    const orders = [...customerorders];\n    orders[index].orderstatus = \"Cancel Order\";\n    this.setState({ customerorders: orders });\n    const orderStatusData = {\n      orderid : val,\n      orderstatus : \"Cancelled\"\n    }\n    //console.log(ordertypedata)\n   this.updateOrderStatus(orderStatusData);\n}\ncancelOrder1 = (val) => {\n  console.log(\"Cancel order\")\n  console.log(val)\n  const { customerorders1 } = this.state;\n  const index = customerorders1.findIndex((order) => order._id === val);\n  const orders = [...customerorders1];\n  orders[index].orderstatus = \"Cancel Order\";\n  this.setState({ customerorders1: orders });\n  const orderStatusData = {\n    orderid : val,\n    orderstatus : \"Cancelled\"\n  }\n  //console.log(ordertypedata)\n this.updateOrderStatus(orderStatusData);\n}\n      updateOrderStatus = (orderStatusData)=>{\n        // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n        //   \"token\");\n        axios.post(`${backendServer}/updateorderstatus`, orderStatusData)\n                .then(res => {\n                    console.log(\"Order type updated\")\n                })\n                \n      }\nhandleordersearch = (e) =>{\n  e.preventDefault();\n   this.setState({\n        customerorders: []\n    });\n  \n  const ordersearch = {\n    orderstatus : this.state.orderstatus,\n    customerid : this.state.customerid\n  }\n  console.log(\"ordersearch\")\n  console.log(ordersearch)\n \n if(this.state.orderstatus === \"All\"){\n   this.componentDidMount();\n }\n  this.searchOrder(ordersearch);\n}\nhandleChange = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n    render(){\n      let paginationItemsTag = []; let items = [];\n      if(this.state.orderstatusmsg === \"found\") {\n        console.log(\"no\")\n       items = this.state.customerorders;\n       console.log(this.state.customerorders)\n       console.log(\"no\")\n      }else if(this.state.ordermsg === \"searchdone\" ){\n        console.log(\"done\")\n        items = this.state.customerorders1;\n        console.log(this.state.customerorders1)\n        console.log(\"done\")\n      }\n      let pgSize = this.state.pageSize;\n      \n      let count = 1;\n      let num = items.length / pgSize;\n      console.log(items.length / pgSize);\n      console.log(Number.isInteger(items.length / pgSize));\n      if (Number.isInteger(num)) {\n        count = num;\n      } else {\n        count = Math.floor(num) + 1;\n      }\n    //   console.log(\"count:\", count);\n    // console.log(\"items.length:\", items.length);\n\n    const active = parseInt(this.state.curPage, 10);\n\n    for (let number = 1; number <= count; number++) {\n      paginationItemsTag.push(\n        <Pagination.Item key={number} active={number === active}>\n          {number}\n        </Pagination.Item>\n      );\n    }\n        let start = parseInt(pgSize * (this.state.curPage - 1));\n        let end = this.state.pageSize + start;\n        //   console.log(\"start: \", start, \", end: \", end);\n        let displayitems = [];\n        if (end > items.length) {\n          end = items.length;\n        }\n        for (start; start < end; start++) {\n          displayitems.push(items[start]);\n        }\n       \tvar orderlist = null;\n         \n         \n              if(this.state.orderstatusmsg === \"found\") {\n                orderlist = ( \n                  <div>\n                    {displayitems && displayitems.length > 0 ? (\n                      \n                      <div>\n                        {displayitems.map((customerorder) => {\n                          return (\n                    <div>\n                      <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>\n                          <Row>\n                            <Col>\n                           <th>{customerorder.restaurantname}  <h4>{customerorder.orderstatus}</h4> \n                           </th>\n                           </Col>\n                           <Col>\n                           <th> {(customerorder.orderstatus === \"Order Received\")?(<div>\n                             <Button onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t      this.cancelOrder(customerorder._id);\n\t\t\t\t\t\t\t\t\t\t\t        }}>\n                               Cancel Order \n                             </Button>\n                           </div>):(<div>\n\n                           </div>)} </th>\n                           </Col>\n                           </Row>\n                           </th>\n                          <th>{customerorder.totalorderquantity} items for ${customerorder.totalorderprice} . {customerorder.datetime}.</th>\n                          <th>Special Instructions : {customerorder.note}</th>\n                          <th><Button \n                           onClick={() => {\n                                this.viewreceipt(customerorder._id);\n                                }}>View Receipt</Button> \n                             </th>   \n                        </tr>\n                        </thead>\n                        </Table>\n                        </div>\n                      \n                          )\n                        })}\n                      </div>\n                    ):\n                      <div>\n                  <h4 className=\"\">No Recent Orders </h4>\n                      </div>\n                    }\n                  </div>\n                );\n            }\n            if(this.state.ordermsg === \"searchdone\" ){\n                orderlist = ( \n                  <div>\n                    {displayitems && displayitems.length > 0 ? (\n                      \n                      <div>\n                        {displayitems.map((customerorder) => {\n                          return (\n                    <div>\n                       <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>\n                          <Row>\n                            <Col>\n                           <th>{customerorder.restaurantname}  <h4>{customerorder.orderstatus}</h4> \n                           </th>\n                           </Col>\n                           <Col>\n                           <th> {(customerorder.orderstatus === \"Order Received\")?(<div>\n                             <Button onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t      this.cancelOrder1(customerorder._id);\n\t\t\t\t\t\t\t\t\t\t\t        }}>\n                               Cancel Order \n                             </Button>\n                           </div>):(<div>\n\n                           </div>)} </th>\n                           </Col>\n                           </Row>\n                           </th>\n                          <th>{customerorder.totalorderquantity} items for ${customerorder.totalorderprice} . {customerorder.datetime}.</th>\n                          <th>Special Instructions : {customerorder.note}</th>\n                          <th><Button \n                           onClick={() => {\n                                this.viewreceipt(customerorder._id);\n                                }}>View Receipt</Button> \n                             </th>   \n                        </tr>\n                        </thead>\n                        </Table>\n                      {/* <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>{customerorder.restaurantname}  <h4>{customerorder.orderstatus}</h4>\n                          </th>\n        \n                          <th>{customerorder.totalorderquantity} items for ${customerorder.totalorderprice} . {customerorder.datetime}.</th>\n                          <th>{customerorder.note}</th>\n                          <th><Button \n                           onClick={() => {\n                                this.viewreceipt(customerorder._id);\n                                }}>View Receipt</Button></th>   \n                        </tr>\n                        </thead>\n                        </Table> */}\n                        </div>\n                      \n                          )\n                        })}\n                      </div>\n                    ):\n                      <div>\n                  <h4 className=\"\">No Recent Orders </h4>\n                      </div>\n                    }\n                  </div>\n               \n          \n                )\n            }\n           \n     \n    return (\n        <div className=\"container\" >\n          <div>\n           \n           <form >\n\t\t\t\t\t\t Order Type :\n            \t<select  name=\"orderstatus\"   value={this.state.orderstatus}  onChange={this.handleChange}>\n              \t<option value=\"All\">All</option> \n              \t<option value=\"Order Received\" >Order Received</option>\n              \t<option value=\"Preparing\"  >Preparing</option>\n              \t<option value=\"On the way\" >On the way</option>\n                <option value=\"Delivered\" >Delivered</option>\n                <option value=\"Pick up Ready\" >Pick up Ready</option>\n                <option value=\"Picked up\" >Picked up</option>\n                <option value=\"Cancelled\">Cancelled Order</option>\n            \t</select>\n              \n\t\t\t\t\t\t<Button \n             onClick={\n                  this.handleordersearch\n              }>\n            \n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n              <div className=\"pageSelect\">\n                Page Size :\n          <select style={{width:'3rem'}} value={this.state.pageSize} onChange={this.OnChange}>\n                <option>2</option>\n                <option>5</option>\n                <option>10</option>\n          </select>\n          </div>\n          </div>\n\n          <br/><br/><br/>\n          <div> {orderlist} </div> \n          <Pagination\n                    onClick={this.onPage}\n                    style={{ display: \"inline-flex\" }}>\n                    {paginationItemsTag}\n          </Pagination>\n          {/* <Button onClick={this.goback}>Home Page</Button> */}\n         <div>\n         <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.show} onHide={()=>this.handleModalClose()}>\n             <Modal.Header closeButton><h4> Receipt</h4>\n             \n             </Modal.Header>\n             <Row>\n                  <Col sm><h6>Total Amount : ${this.state.totalamount}</h6></Col>\n                  <Col sm><h6>Total Qty : {this.state.totalquantity}</h6></Col>\n                  \n              </Row>\n             \n             <Modal.Body>\n             \n               <div>\n              {this.state.receiptdetails.map(receiptdetail=>\n              <div >\n                <Row>\n                  <Col sm={1}>{receiptdetail.quantity} </Col>\n                  <Col sm={6}>{receiptdetail.dishname}</Col>\n                  <Col sm={1}>${receiptdetail.dishprice}</Col>\n                </Row>\n            \n              </div>)}\n              \n              </div>\n             \n             </Modal.Body>\n              <h6>Added Note : {this.state.note}</h6>\n             <Modal.Footer>\n             \n             </Modal.Footer>\n           </Modal>\n          </div>\n       </div>\n    )\n    }\n}\n\nexport default CustomerOrder\n"]},"metadata":{},"sourceType":"module"}