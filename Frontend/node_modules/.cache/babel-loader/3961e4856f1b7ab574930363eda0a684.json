{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/Checkout.js\";\nimport React, { Component } from 'react'; // import cookie from 'react-cookies';\n\nimport { Input } from 'reactstrap';\nimport { Button, Modal, Form, Row, Col } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport axios from 'axios';\nimport { CountryDropdown } from 'react-country-region-selector';\n\nclass CheckOut extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/restauranthome');\n    };\n\n    this.choosePickUp = () => {\n      //e.preventDefault();\n      console.log(\"pickup\");\n      localStorage.setItem(\"deliverytype\", \"Pick Up\");\n      this.setState({\n        delstatus: \"pickup\"\n      });\n      this.setState({\n        del: \"both\"\n      });\n    };\n\n    this.chooseDelivery = () => {\n      console.log(\"delivert\");\n      localStorage.setItem(\"deliverytype\", \"Delivery\");\n      this.setState({\n        delstatus: \"delivery\"\n      });\n      this.setState({\n        del: \"both\"\n      });\n    };\n\n    this.addToOrders = data => {\n      //axios.defaults.headers.common.authorization = localStorage.getItem('token');\n      axios.post(`${backendServer}/placeorder`, data).then(res => {}).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.placeOrder = e => {\n      e.preventDefault();\n      localStorage.setItem(\"checkout\", \"NoCheckout\");\n      let street;\n      let city;\n      let state;\n      let country;\n\n      if (localStorage.getItem(\"deliverytype\") === \"Delivery\" || this.state.delstatus === \"delivery\") {\n        if (this.state.selectedAddr === null || this.state.selectedAddr === undefined) {\n          alert('Please select a delivery address option!');\n          return;\n        } else {\n          if (this.state.selectedAddr !== \"new\") {\n            const addrObj = JSON.parse(this.state.selectedAddr);\n            street = addrObj.address;\n            city = addrObj.city;\n            state = addrObj.state;\n            country = addrObj.country;\n            const orderDetails = [];\n            this.state.dishes.forEach(element => {\n              orderDetails.push({\n                dishid: element.dishid,\n                quantity: element.quantity,\n                dishprice: element.dishprice,\n                dishname: element.dishname\n              });\n            });\n            const orderData = {\n              customerid: this.state.customerid,\n              restaurantid: this.state.restaurantid,\n              restaurantname: this.state.restaurantname,\n              customername: this.state.customername,\n              street: street,\n              city: city,\n              state: state,\n              country: country,\n              ordertype: this.state.ordertype,\n              totalorderquantity: this.state.totalorderquantity,\n              totalorderprice: this.state.totalorderprice,\n              datetime: this.state.dateandtime.substring(0, 24),\n              note: this.state.note,\n              orderDetails\n            };\n            this.addToOrders(orderData);\n            this.setState({\n              show: true\n            });\n          } else if (this.state.selectedAddr === \"new\") {\n            street = this.state.street;\n            city = this.state.city;\n            state = this.state.state;\n            country = this.state.country;\n            console.log(street, city, state, country);\n\n            if (city === null || state === null || country === null || street === null || country === \"\") {\n              alert(\"Address fields cannot be empty\");\n              return;\n            } else {\n              const orderDetails = [];\n              this.state.dishes.forEach(element => {\n                orderDetails.push({\n                  dishid: element.dishid,\n                  quantity: element.quantity,\n                  dishprice: element.dishprice,\n                  dishname: element.dishname,\n                  note: this.state.note\n                });\n              });\n              const orderData = {\n                customerid: this.state.customerid,\n                restaurantid: this.state.restaurantid,\n                restaurantname: this.state.restaurantname,\n                customername: this.state.customername,\n                street: street,\n                city: city,\n                state: state,\n                country: country,\n                ordertype: this.state.ordertype,\n                totalorderquantity: this.state.totalorderquantity,\n                totalorderprice: this.state.totalorderprice,\n                datetime: this.state.dateandtime.substring(0, 24),\n                note: this.state.note,\n                orderDetails\n              };\n              this.addToOrders(orderData);\n              this.setState({\n                show: true\n              });\n            }\n          }\n        }\n      }\n\n      if (localStorage.getItem(\"deliverytype\") === \"Pick Up\" || this.state.delstatus === \"pickup\") {\n        console.log(\"*****Pick Up******\");\n        city = \"\";\n        state = \"\";\n        country = \"\";\n        street = \"\";\n        const orderDetails = [];\n        this.state.dishes.forEach(element => {\n          orderDetails.push({\n            dishid: element.dishid,\n            quantity: element.quantity,\n            dishprice: element.dishprice,\n            dishname: element.dishname\n          });\n        });\n        const orderData = {\n          customerid: this.state.customerid,\n          restaurantid: this.state.restaurantid,\n          restaurantname: this.state.restaurantname,\n          customername: this.state.customername,\n          street: street,\n          city: city,\n          state: state,\n          country: country,\n          ordertype: this.state.ordertype,\n          totalorderquantity: this.state.totalorderquantity,\n          totalorderprice: this.state.totalorderprice,\n          datetime: this.state.dateandtime.substring(0, 24),\n          note: this.state.note,\n          orderDetails\n        };\n        this.addToOrders(orderData);\n        this.setState({\n          show: true\n        });\n      }\n    };\n\n    this.handleChangeAddress = e => {\n      this.setState({\n        selectedAddr: e.target.value\n      });\n\n      if (e.target.value === 'new') {\n        this.setState({\n          showDiv: true\n        });\n      } else {\n        this.setState({\n          showDiv: false\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      status: null,\n      addressstatus: null,\n      dishes: [],\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid: localStorage.getItem(\"restaurantid\"),\n      restaurantname: localStorage.getItem(\"restaurantname\"),\n      customername: localStorage.getItem(\"username\"),\n      dishid: null,\n      deliveryaddress: [],\n      orderadd: null,\n      showDiv: false,\n      street: null,\n      state: null,\n      city: null,\n      country: null,\n      dateandtime: Date().toLocaleString(),\n      selectedAddr: null,\n      errorMsg: null,\n      ordertype: localStorage.getItem(\"deliverytype\"),\n      totalorderquantity: null,\n      totalorderprice: null,\n      show: false,\n      note: null,\n      delstatus: null,\n      del: null\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      customerid: localStorage.getItem(\"userid\") //restaurantid: this.state.restaurantid\n\n    }; // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n    //   \"token\");\n\n    axios.post(`${backendServer}/getorderaddress`, data).then(response => {\n      console.log(response.data);\n\n      if (response.data.status === 200) {\n        this.setState({\n          addressstatus: \"datapresent\"\n        });\n      } else {\n        this.setState({\n          addressstatus: \"nodata\"\n        });\n      }\n\n      this.setState({\n        deliveryaddress: this.state.deliveryaddress.concat(response.data.address)\n      });\n    });\n    axios.post(`${backendServer}/getcartitem`, data).then(response => {\n      // console.log(response.data);\n      if (response.data.length > 0) {\n        this.setState({\n          status: \"datapresent\"\n        });\n      } else {\n        this.setState({\n          status: \"nodata\"\n        });\n      }\n\n      this.setState({\n        dishes: this.state.dishes.concat(response.data)\n      });\n      this.state.dishes.forEach(element => {\n        this.setState({\n          totalorderquantity: this.state.totalorderquantity + element.quantity\n        });\n        this.setState({\n          totalorderprice: this.state.totalorderprice + element.quantityprice\n        });\n      });\n      this.setState({\n        totalorderquantity: this.state.totalorderquantity\n      });\n      this.setState({\n        totalorderprice: this.state.totalorderprice.toFixed(2)\n      });\n    });\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n    const {\n      history\n    } = this.props;\n    history.push('/customerhome');\n  }\n\n  selectCountry(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  render() {\n    var addresses = null;\n    var addnewaddress = null;\n    var cartitems = null;\n    var showdeloptions = null;\n    console.log(\"I am hee\");\n\n    if (localStorage.getItem(\"deliverytype\") === \"Delivery\" || this.state.delstatus === \"delivery\") {\n      // console.log(\"***DEli***\")\n      if (this.state.showDiv) {\n        addnewaddress = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 14\n          }\n        }, \"Apt and Street No: \", /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          className: \"form-control-add\",\n          name: \"street\",\n          defaultValue: this.state.street,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 34\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }\n        }, \"City: \", /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          className: \"form-control-add\",\n          name: \"city\",\n          defaultValue: this.state.city,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 14\n          }\n        }, \"State: \", /*#__PURE__*/React.createElement(Input, {\n          type: \"text\",\n          className: \"form-control-add\",\n          name: \"state\",\n          defaultValue: this.state.state,\n          onChange: this.handleChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 22\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CountryDropdown, {\n          className: \"form-control\",\n          value: this.state.country,\n          onChange: val => this.selectCountry(val),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }\n        })));\n      }\n\n      if (this.state.addressstatus === \"datapresent\") {\n        addresses = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 16\n          }\n        }, \"Select a delivery address\"), this.state.deliveryaddress.map(deliveryadd => /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }\n        }, deliveryadd.address ? /*#__PURE__*/React.createElement(Form.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          inline: true,\n          value: JSON.stringify(deliveryadd),\n          label: `${deliveryadd.address},${deliveryadd.city},${deliveryadd.state},${deliveryadd.country}`,\n          name: \"address\",\n          type: \"radio\",\n          id: deliveryadd,\n          onChange: this.handleChangeAddress,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 19\n          }\n        })) : /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 18\n          }\n        }))), /*#__PURE__*/React.createElement(Form.Group, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          inline: true,\n          value: \"new\",\n          label: \"Add new delivery address\",\n          name: \"address\",\n          type: \"radio\",\n          id: \"new\",\n          onChange: this.handleChangeAddress,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n\n    if (localStorage.getItem(\"deliverytype\") === \"Pick Up\" || this.state.delstatus === \"pickup\") {\n      addresses = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 16\n        }\n      }, \"Pick Up from Restaurant\"));\n    }\n\n    if (localStorage.getItem(\"deliverytype\") === \"Pick Up and Delivery\" || this.state.del === \"both\") {\n      showdeloptions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 10\n        }\n      }, \"Select Delivery Option :\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        variant: \"light\",\n        onClick: this.choosePickUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 10\n        }\n      }, \"Pick Up\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"light\",\n        onClick: this.chooseDelivery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 10\n        }\n      }, \"Delivery\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 7\n      }\n    }, \"Your items\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"carttable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(Col, {\n      className: \"carttable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }\n    }, \"Price(per Item)\"), /*#__PURE__*/React.createElement(Col, {\n      className: \"carttable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }\n    }, \"Qty\"))), this.state.dishes.map(dish => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 15\n      }\n    }, dish.dishname), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 15\n      }\n    }, \"$\", dish.dishprice), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    }, dish.quantity))))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }\n    }, \"Total : $\", this.state.totalorderprice), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }\n    }, \"Total No of Items : \", this.state.totalorderquantity), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }\n    }), \"Add a note\", /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"note\",\n      value: this.state.note,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }\n    }), showdeloptions, addresses, addnewaddress, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.placeOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 8\n      }\n    }, \"Place Order\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 15\n      }\n    }, \"Order Successfully Placed ! Thank you \", this.state.customername)))));\n  }\n\n}\n\nexport default CheckOut;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Dashboard/Checkout.js"],"names":["React","Component","Input","Button","Modal","Form","Row","Col","backendServer","axios","CountryDropdown","CheckOut","constructor","props","goback","e","preventDefault","history","push","choosePickUp","console","log","localStorage","setItem","setState","delstatus","del","chooseDelivery","addToOrders","data","post","then","res","catch","error","placeOrder","street","city","state","country","getItem","selectedAddr","undefined","alert","addrObj","JSON","parse","address","orderDetails","dishes","forEach","element","dishid","quantity","dishprice","dishname","orderData","customerid","restaurantid","restaurantname","customername","ordertype","totalorderquantity","totalorderprice","datetime","dateandtime","substring","note","show","handleChangeAddress","target","value","showDiv","handleChange","name","status","addressstatus","deliveryaddress","orderadd","Date","toLocaleString","errorMsg","componentDidMount","response","concat","length","quantityprice","toFixed","handleModalClose","selectCountry","val","render","addresses","addnewaddress","cartitems","showdeloptions","map","deliveryadd","stringify","dish"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n// import cookie from 'react-cookies';\nimport { Input} from 'reactstrap';\nimport {Button,Modal, Form,Row,Col} from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport axios from 'axios';\nimport { CountryDropdown } from 'react-country-region-selector';\nclass CheckOut extends Component {\n    \n    constructor(props){\n        super(props);\n  \n        this.state = {\n          status : null,\n          addressstatus:null,\n          dishes:[],\n          customerid:localStorage.getItem(\"userid\"),\n          restaurantid:localStorage.getItem(\"restaurantid\"),\n          restaurantname : localStorage.getItem(\"restaurantname\"),\n          customername:localStorage.getItem(\"username\"),\n          dishid:null,\n          deliveryaddress: [],\n          orderadd:null,\n          showDiv:false,\n          street:null,\n          state:null,\n          city:null,\n          country:null,\n          dateandtime:Date().toLocaleString(),\n          selectedAddr: null,\n          errorMsg: null,\n          ordertype: localStorage.getItem(\"deliverytype\"),\n          totalorderquantity:null,\n          totalorderprice:null,\n          show: false,\n          note:null,\n          delstatus:null,\n          del:null\n          \n        }\n\n      }\n      componentDidMount(){\n        \n        const data = {\n          customerid:localStorage.getItem(\"userid\"),\n          //restaurantid: this.state.restaurantid\n        };\n        // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n        //   \"token\");\n        axios.post(`${backendServer}/getorderaddress`,data)\n                .then((response) => { \n                  console.log(response.data);\n\n                 if(response.data.status === 200){\n                   this.setState({ addressstatus : \"datapresent\"});\n                 }\n                 else {\n                   this.setState({ addressstatus : \"nodata\"});\n                 }\n                this.setState({\n                  deliveryaddress : this.state.deliveryaddress.concat(response.data.address) \n                });\n            });\n         axios.post(`${backendServer}/getcartitem`,data)\n                .then((response) => { \n                 // console.log(response.data);\n                 if(response.data.length > 0){\n                   this.setState({ status : \"datapresent\"});\n                 }\n                 else {\n                   this.setState({ status : \"nodata\"});\n                 }\n                this.setState({\n                  dishes : this.state.dishes.concat(response.data) \n                });\n                this.state.dishes.forEach((element) => {\n                  this.setState({\n                    totalorderquantity : this.state.totalorderquantity + element.quantity\n                  })\n                  this.setState({\n                    totalorderprice : this.state.totalorderprice + element.quantityprice\n                  })\n\n                 \n                });\n                this.setState({\n                  totalorderquantity : this.state.totalorderquantity \n                });\n                this.setState({\n                  totalorderprice : this.state.totalorderprice.toFixed(2) \n                });\n                });\n      }\n     \n      goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/restauranthome'); \n      }\n      choosePickUp= ()=>{\n        //e.preventDefault();\n        console.log(\"pickup\")\n        localStorage.setItem(\"deliverytype\",\"Pick Up\")\n        this.setState({delstatus:\"pickup\"})\n        this.setState({del:\"both\"})\n      }\n      chooseDelivery = () =>{\n        console.log(\"delivert\")\n        localStorage.setItem(\"deliverytype\",\"Delivery\")\n        this.setState({delstatus:\"delivery\"})\n        this.setState({del:\"both\"})\n      }\n   addToOrders = (data) => {\n    //axios.defaults.headers.common.authorization = localStorage.getItem('token');\n        axios.post(`${backendServer}/placeorder`, data)\n            .then(res => {\n                \n            }).catch(\n                (error) => {\n                  console.log(error);\n                }\n            );\n    }\n     \n      placeOrder = (e) => {\n        e.preventDefault();\n        localStorage.setItem(\"checkout\",\"NoCheckout\");\n        let street; let city ; let state; let country;\n        if((localStorage.getItem(\"deliverytype\") === \"Delivery\")|| this.state.delstatus === \"delivery\"){\n       \n          if ((this.state.selectedAddr === null || this.state.selectedAddr === undefined)  ) {\n            alert( 'Please select a delivery address option!')\n            return;\n          }\n          else{\n            if(this.state.selectedAddr !== \"new\"){\n                const addrObj = JSON.parse(this.state.selectedAddr);\n                street = addrObj.address;\n                city = addrObj.city;\n                state =addrObj.state;\n                country = addrObj.country;\n\n                const orderDetails = []; \n                  this.state.dishes.forEach((element) => {\n                    orderDetails.push({ dishid: element.dishid, quantity: element.quantity,dishprice : element.dishprice,dishname:element.dishname });  \n                  });\n                  const orderData = {\n                      customerid:this.state.customerid,\n                      restaurantid:this.state.restaurantid,\n                      restaurantname:this.state.restaurantname,\n                      customername:this.state.customername,\n                      street:street,\n                      city:city,\n                      state:state,\n                      country:country,\n                      ordertype:this.state.ordertype,\n                      totalorderquantity:this.state.totalorderquantity,\n                      totalorderprice:this.state.totalorderprice,\n                      datetime:this.state.dateandtime.substring(0,24),\n                      note:this.state.note,\n                      orderDetails\n                  }\n                  \n                  this.addToOrders(orderData); \n                    this.setState({\n                      show : true \n                  });\n                  \n              }\n            else if(this.state.selectedAddr === \"new\"){\n              street = this.state.street;\n              city = this.state.city;\n              state =this.state.state;\n              country = this.state.country;\n              console.log(street,city,state,country)\n              if(city === null || state === null || country === null || street === null || country === \"\" ){\n                  alert(\"Address fields cannot be empty\");\n                  return;\n              }else{\n                  const orderDetails = []; \n                  this.state.dishes.forEach((element) => {\n                    orderDetails.push({ dishid: element.dishid, quantity: element.quantity,dishprice : element.dishprice,dishname:element.dishname,note:this.state.note  });  \n                  });\n                  const orderData = {\n                    customerid:this.state.customerid,\n                    restaurantid:this.state.restaurantid,\n                    restaurantname:this.state.restaurantname,\n                    customername:this.state.customername,\n                    street:street,\n                    city:city,\n                    state:state,\n                    country:country,\n                    ordertype:this.state.ordertype,\n                    totalorderquantity:this.state.totalorderquantity,\n                    totalorderprice:this.state.totalorderprice,\n                    datetime:this.state.dateandtime.substring(0,24),\n                    note:this.state.note,\n                    orderDetails\n                  }\n                  this.addToOrders(orderData); \n                    this.setState({\n                      show : true \n                    });\n              }\n            }\n          }\n        }\n        if((localStorage.getItem(\"deliverytype\") === \"Pick Up\") || (this.state.delstatus === \"pickup\") ){\n          console.log(\"*****Pick Up******\");\n              city = \"\";\n              state= \"\";\n              country = \"\";\n              street = \"\";\n              const orderDetails = []; \n                  this.state.dishes.forEach((element) => {\n                  orderDetails.push({ dishid: element.dishid, quantity: element.quantity,dishprice : element.dishprice,dishname:element.dishname });  \n              });\n                  const orderData = {\n                    customerid:this.state.customerid,\n                    restaurantid:this.state.restaurantid,\n                    restaurantname:this.state.restaurantname,\n                    customername:this.state.customername,\n                    street:street,\n                    city:city,\n                    state:state,\n                    country:country,\n                    ordertype:this.state.ordertype,\n                    totalorderquantity:this.state.totalorderquantity,\n                    totalorderprice:this.state.totalorderprice,\n                    datetime:this.state.dateandtime.substring(0,24),\n                    note:this.state.note,\n                    orderDetails\n                  }\n                  this.addToOrders(orderData); \n                    this.setState({\n                      show : true \n                    });\n\n        }\n      }\n       handleModalClose(){\n      this.setState({show:!this.state.show}) \n       const {history} = this.props;\n        history.push('/customerhome'); \n        }\n      handleChangeAddress = (e) => {\n      this.setState({\n        selectedAddr: e.target.value,\n      }); \n\n        \n      if (e.target.value === 'new') {\n        this.setState({ showDiv: true });\n      } else {\n        this.setState({ showDiv: false });\n      }\n  }\n  handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        }\n  selectCountry (val) {\n      this.setState({ country: val });\n  }\n      render(){\n       \n        var addresses = null;\n        var addnewaddress = null;\n        var cartitems = null;\n        var showdeloptions = null;\n       console.log(\"I am hee\")\n      if(localStorage.getItem(\"deliverytype\") === \"Delivery\" || this.state.delstatus === \"delivery\") { \n        // console.log(\"***DEli***\")\n       if(this.state.showDiv){\n         addnewaddress = (\n           <div>\n            \n             <div className=\"form-group\">\n              Apt and Street No: <Input type=\"text\" className=\"form-control-add\" name=\"street\" defaultValue={this.state.street} onChange={this.handleChange} ></Input>\n              </div>\n              <div className=\"form-group\">\n              City: <Input type=\"text\" className=\"form-control-add\" name=\"city\" defaultValue={this.state.city} onChange={this.handleChange} ></Input>\n              </div>\n             <div className=\"form-group\">\n              State: <Input type=\"text\" className=\"form-control-add\" name=\"state\" defaultValue={this.state.state} onChange={this.handleChange} ></Input>\n              </div>\n             \n              <div className=\"form-group\">\n\n              <CountryDropdown className=\"form-control\"\n                    value={this.state.country}\n                    onChange={(val) => this.selectCountry(val)} \n                  />\n              </div>\n           </div>\n         )\n       }\n        if(this.state.addressstatus === \"datapresent\"){\n         \n          addresses = (\n            <div>\n               <h4>Select a delivery address</h4>\n              {this.state.deliveryaddress.map(deliveryadd=>\n              <div>\n                {deliveryadd.address ?\n                (\n                  <Form.Group  >\n                  <Form.Check inline value={JSON.stringify(deliveryadd)} label={`${deliveryadd.address},${deliveryadd.city},${deliveryadd.state},${deliveryadd.country}`}  name=\"address\" type=\"radio\" id={deliveryadd} onChange={this.handleChangeAddress} />\n                  </Form.Group>\n                ) \n                :<div/>}\n \n              </div>\n              )}\n              <Form.Group  >\n            <Form.Check inline value=\"new\" label=\"Add new delivery address\"  name=\"address\" type=\"radio\" id=\"new\" onChange={this.handleChangeAddress} />\n          </Form.Group>\n            </div>\n            \n          )\n        }\n\n      } \n      if(localStorage.getItem(\"deliverytype\") === \"Pick Up\" || this.state.delstatus === \"pickup\"){\n        \n        addresses = (\n          <div><h1>Pick Up from Restaurant</h1></div>\n        )\n       \n      } \n      if(localStorage.getItem(\"deliverytype\") === \"Pick Up and Delivery\" || this.state.del === \"both\")\n      {\n        showdeloptions = (\n          \n          \n       <div>\n         <h6>Select Delivery Option :</h6>\n         <br/>\n         <Button variant=\"light\" onClick = {this.choosePickUp}>Pick Up</Button>\n         <Button variant=\"light\" onClick = {this.chooseDelivery}>Delivery</Button>\n       </div>\n        )\n      }\n     \n    return (\n      \n\n      <div className=\"container\">\n         \n      <h4>Your items</h4>\n         <div>\n         <Form>\n            <Row>\n            <Col className=\"carttable\">\n            Item \n            </Col>\n            <Col className=\"carttable\">\n              Price(per Item)\n            </Col>\n            <Col className=\"carttable\">\n              Qty\n            </Col>\n            </Row>\n          </Form>\n          {this.state.dishes.map(dish=>\n            <Form>\n              <Row>\n              <Col>\n              {dish.dishname}\n              </Col>\n              <Col>\n              ${dish.dishprice}\n              </Col>\n              <Col>\n              {dish.quantity}\n              </Col>\n              </Row>\n            </Form>\n          )}\n              \n          </div>\n       \n        <br/>\n        <h2>Total : ${this.state.totalorderprice}</h2>\n        <h4>Total No of Items : {this.state.totalorderquantity}</h4>\n        <br/>\n        <br/>\n        Add a note\n        <textarea type=\"text\" className=\"form-control\" name=\"note\" value={this.state.note}\n        onChange={this.handleChange} />\n        <br/>\n       {showdeloptions}\n       {addresses}\n     \n      \n      {addnewaddress}\n       \n       <br/>\n       <Button variant=\"success\" onClick={this.placeOrder}>Place Order</Button>\n       <br/>\n       <br/>\n     \n      <div>\n         <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.show} onHide={()=>this.handleModalClose()}>\n             <Modal.Header closeButton></Modal.Header>\n             <Modal.Body>\n              <h5>Order Successfully Placed ! Thank you {this.state.customername}</h5>\n             </Modal.Body>\n            \n           </Modal>\n      </div>\n      </div>\n    )\n    }\n   \n}\n \nexport default CheckOut;"]},"metadata":{},"sourceType":"module"}