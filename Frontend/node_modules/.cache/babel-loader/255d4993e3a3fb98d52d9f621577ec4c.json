{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Register/Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Input } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup, restaurantSignup } from \"../../actions/signupActions\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.validateCustRegister = () => {\n      let isValid = true;\n\n      if (this.nullOrEmpty(this.state.username) || this.nullOrEmpty(this.state.email) || this.nullOrEmpty(this.state.password)) {\n        alert(\"Fields cannot be empty\");\n        isValid = false;\n      } else {\n        if (!validator.isEmail(this.state.email)) {\n          alert('Enter valid Email!');\n          isValid = false;\n        }\n\n        if (!this.state.username.match(/^[a-zA-Z ]+$/)) {\n          alert(\"Name can contain only alphabets\");\n          isValid = false;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const buyerData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: \"N/A\",\n        city: \"N/A\",\n        owner: false\n      };\n      const ownerData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: this.state.restaurantname,\n        city: this.state.city,\n        owner: true\n      };\n      console.log(ownerData);\n\n      if (!this.state.owner) {\n        this.props.userSignup(buyerData);\n      } else {\n        this.props.restaurantSignup(ownerData);\n      }\n    };\n\n    this.login = e => {\n      e.preventDefault(); // this.props.user.message = null;\n\n      const {\n        history\n      } = this.props;\n      history.push('/login');\n    };\n\n    this.switchForm = e => {\n      !this.state.owner ? this.setState({\n        owner: true\n      }) : this.setState({\n        owner: false\n      });\n    };\n\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.switchForm = this.switchForm.bind(this);\n  }\n\n  nullOrEmpty(str) {\n    return str === null || str === \"\";\n  }\n\n  render() {\n    //localStorage.setItem(\"message\",this.props.user.message)\n    let redirectHome = null;\n    var ownerForm = null;\n    var userForm = null;\n    var accountType = \"Owner\";\n    let message = \"\";\n\n    if (this.props.user) {\n      console.log(this.props.user.message);\n\n      if (this.props.user.message === \"User Registration successful\") {\n        redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/Login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 32\n          }\n        });\n        this.props.user.message = null;\n        message = null;\n      } else {\n        message = this.props.user.message;\n        redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/Register\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 32\n          }\n        });\n        this.props.user.message = null;\n      }\n    } else {\n      message = \"\";\n      this.props.user.message = null;\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 28\n        }\n      });\n    } // if(this.state.message == \"User email already registered\"){\n    //     alert(\"Email already exists\");\n    // }\n\n\n    if (this.state.owner) {\n      ownerForm = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, \"Restaurant Name:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"username\",\n        onChange: this.handleChange,\n        placeholder: \"Enter Restaurant Name\",\n        pattern: \"^[A-Za-z0-9 ]+$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }), \"Email:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        onChange: this.handleChange,\n        placeholder: \"Email Id\",\n        pattern: \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 27\n        }\n      }), \"Password:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        onChange: this.handleChange,\n        placeholder: \"Password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 30\n        }\n      }), \"City: \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"city\",\n        onChange: this.handleChange,\n        placeholder: \"Enter location\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, \"Register\"), \" \\xA0\"))));\n      accountType = \"User\";\n    } else {\n      userForm = /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, \"Name: \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"username\",\n        onChange: this.handleChange,\n        placeholder: \"Enter Customer Name\",\n        pattern: \"^[A-Za-z0-9 ]+$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 19\n        }\n      }), \"Email:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        onChange: this.handleChange,\n        placeholder: \"Email Id\",\n        pattern: \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }), \"Password:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        onChange: this.handleChange,\n        placeholder: \"Password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 24\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, \"Register\"), \" \\xA0\"));\n      accountType = \"Owner\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, redirectHome, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, \"Let's get started.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \"Please enter required details to register.\")), userForm, ownerForm, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.switchForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, \"Sign Up as \", accountType), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"Already have an account?\", /*#__PURE__*/React.createElement(Button, {\n      color: \"link\",\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 90\n      }\n    }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 52\n      }\n    }, message))))));\n  }\n\n}\n\nRegister.propTypes = {\n  userSignup: PropTypes.func.isRequired,\n  restaurantSignup: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.signup.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignup,\n  restaurantSignup\n})(Register);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/Register/Register.js"],"names":["React","Component","Link","Button","Input","Redirect","validator","PropTypes","connect","userSignup","restaurantSignup","Register","constructor","props","handleChange","e","preventDefault","setState","target","name","value","console","log","state","validateCustRegister","isValid","nullOrEmpty","username","email","password","alert","isEmail","match","handleSubmit","buyerData","city","owner","ownerData","login","history","push","switchForm","bind","str","render","redirectHome","ownerForm","userForm","accountType","message","user","color","propTypes","func","isRequired","object","mapStateToProps","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button ,Input} from 'reactstrap';\nimport { Redirect } from 'react-router';\n\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup ,restaurantSignup} from \"../../actions/signupActions\";\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.switchForm = this.switchForm.bind(this);\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(this.state);\n    }\n    \n    nullOrEmpty(str) {\n        return str === null || str === \"\" \n    }\n    validateCustRegister = () => {\n        let isValid = true;\n        if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)){\n        alert(\"Fields cannot be empty\");\n           isValid = false;\n        }\n        else{\n            if (!validator.isEmail(this.state.email)) {\n                alert('Enter valid Email!')\n                isValid = false;\n            }\n            \n            if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n                alert(\"Name can contain only alphabets\")\n                isValid = false;\n            }\n        } \n        return isValid;\n     }\n   \n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const buyerData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: \"N/A\",\n            city: \"N/A\",\n            owner: false\n        }\n\n        const ownerData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: this.state.restaurantname,\n            city: this.state.city,\n            owner: true\n        }\n        console.log(ownerData);\n        if (!this.state.owner) {  \n             \n                this.props.userSignup(buyerData);          \n        } else {\n                this.props.restaurantSignup(ownerData);   \n        }\n\n    }\n    login = (e) => {\n        e.preventDefault();\n        // this.props.user.message = null;\n        const {history} = this.props;\n        history.push('/login'); \n    }\n    //switch between user and owner sign up form\n    switchForm = (e) => {\n        (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n    }\n\n    render() {\n        \n        //localStorage.setItem(\"message\",this.props.user.message)\n        let redirectHome = null;\n        var ownerForm = null;\n        var userForm = null;\n        var accountType = \"Owner\";\n        let message = \"\";\n        if(this.props.user){\n            console.log(this.props.user.message)\n            if(this.props.user.message === \"User Registration successful\"){\n                redirectHome = <Redirect to=\"/Login\" />\n                this.props.user.message = null;\n                message = null;\n            }\n            else{\n                message = this.props.user.message;\n                redirectHome = <Redirect to=\"/Register\" />\n                this.props.user.message = null;   \n      \n            }\n        }else{\n            message = \"\";\n            this.props.user.message = null;   \n            redirectHome = <Redirect to=\"/Register\"/>\n        }\n        \n        \n        // if(this.state.message == \"User email already registered\"){\n        //     alert(\"Email already exists\");\n        // }\n        if (this.state.owner) {\n            ownerForm =\n           \n            <div className=\"form-group\">\n                <div >\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n                      \n                  Restaurant Name:  <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Restaurant Name\" pattern=\"^[A-Za-z0-9 ]+$\" required /> \n                  Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n                  Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />\n                  City: <input type=\"text\" className=\"form-control\" name=\"city\" onChange={this.handleChange} placeholder=\"Enter location\"  required />\n                  <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n                 \n                  </div>\n        \n                  </form>\n\n                </div>\n                </div>\n            \n            accountType = \"User\";\n        } else{\n            userForm =\n            <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n\n            Name: <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Customer Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n            Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n            Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />   \n            <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n                  \n            </div>\n                  \n                  \n        \n        </form>\n         accountType = \"Owner\";\n        }\n       \n        return (\n            <div className =\"body-login\">\n                {redirectHome}\n           \n            <div className=\"container\">\n              <div className=\"login-form\">\n                <div className=\"main-div\">\n                  <div className=\"panel\">\n                  <h1>Let's get started.</h1>\n                    <p>Please enter required details to register.</p>\n                  </div>\n                  {userForm}\n                  {ownerForm}\n                \n                  <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n                 \n                  <h4>Already have an account?<Button  color=\"link\" onClick={this.login}><h4>Login</h4></Button></h4>\n                  <div  style={{color: \"#ff0000\"}}><h4>{message}</h4></div> \n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\nRegister.propTypes = {\n    userSignup: PropTypes.func.isRequired,\n    restaurantSignup: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n   \n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      user: state.signup.user,\n    };\n  };\n  \n  export default connect(mapStateToProps, {userSignup,restaurantSignup})(Register);"]},"metadata":{},"sourceType":"module"}