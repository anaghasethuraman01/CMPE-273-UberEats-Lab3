{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/HomePage/CustomerHome.js\";\nimport React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip'; // import cookie from 'react-cookies';\n\nimport { Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { Modal, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport backendServer from \"../../webConfig\";\nimport { IoIosRestaurant } from 'react-icons/io';\nimport { MdFavoriteBorder } from 'react-icons/md';\nimport { RiPhoneFill } from 'react-icons/ri';\nimport { IoMail } from 'react-icons/io5';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { customerHome } from \"../../actions/customerHomeActions\";\n\nclass CustomerHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleShow = () => {\n      this.setState({\n        sideshow: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        sideshow: false\n      });\n    };\n\n    this.addToFavourites = restid => {\n      this.setState({\n        show: true\n      });\n      const customerid = localStorage.getItem(\"userid\");\n      const favourites = {\n        customerid: customerid,\n        restaurantid: restid\n      };\n      this.addToFavouritesTable(favourites);\n    };\n\n    this.addToFavouritesTable = data => {\n      // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //   \"token\");\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/addtofavourites`, data).then(res => {\n        this.setState({\n          message: res.data\n        }); // console.log(\"Status Code : \", res.status);\n        // if (res.status === 200) {\n        // \tthis.setState({ authFlag: true });\n        // } else {\n        // \tthis.setState({ authFlag: false });\n        // }\n      });\n    };\n\n    this.navigatetorestaurant = (restaurantid, restaurantname, deliverytype) => {\n      //  window.location.href='/SingleRestDashboard';\n      localStorage.setItem(\"restaurantid\", restaurantid);\n      localStorage.setItem(\"restaurantname\", restaurantname);\n      localStorage.setItem(\"deliverytype\", deliverytype);\n      const {\n        history\n      } = this.props;\n      console.log(history);\n      history.push(\"/singlerestdashboard\");\n    };\n\n    this.state = {\n      customerid: localStorage.getItem(\"userid\"),\n      username: localStorage.getItem(\"username\"),\n      email: localStorage.getItem(\"email\"),\n      phone: localStorage.getItem(\"phone\"),\n      dob: localStorage.getItem(\"dob\"),\n      address: localStorage.getItem(\"address\"),\n      state: localStorage.getItem(\"state\"),\n      city: localStorage.getItem(\"city\"),\n      country: localStorage.getItem(\"country\"),\n      nickname: localStorage.getItem(\"nickname\"),\n      about: localStorage.getItem(\"about\"),\n      favourites: null,\n      loading: false,\n      output: null,\n      restaurants: [],\n      restaurants1: [],\n      favrestaurants: [],\n      show: false,\n      message: null,\n      sideshow: false\n    };\n  }\n\n  componentDidMount() {\n    const city = this.state.city;\n\n    if (city !== \"null\" && city !== \"Add\") {\n      const data = {\n        city: city\n      };\n      this.props.customerHome(data); // console.log(\"city\")\n      // console.log(data)\n      // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n      // axios.post(`${backendServer}/getrestaurantwithcity`,data).then((response) => {\n      //   this.setState({\n      //     restaurants: this.state.restaurants.concat(response.data),\n      //   });\n      // });\n    }\n\n    if (city === \"null\" || city === \"Add\" || city === undefined || this.state.restaurants.length === 0) {\n      //console.log(\"here\")\n      //   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //     \"token\"\n      // );\n      axios.get(`${backendServer}/getrestaurant`).then(response => {\n        //this.setState({ status: \"notdone\" });\n        // console.log(\"all det\")\n        // console.log(response.data);\n        //update the state with the response data\n        this.setState({\n          restaurants1: this.state.restaurants1.concat(response.data)\n        });\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.userhome) {\n      var {\n        userhome\n      } = nextProps;\n    }\n\n    this.setState({\n      restaurants: this.state.restaurants.concat(userhome)\n    }); // console.log(typeof(favourite))\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    }); // const {history} = this.props;\n    // history.push('/customerhome'); \n  }\n\n  render() {\n    // let {restaurants} = this.state;\n    // console.log(typeof(this.props.userhome))\n    // restaurants = restaurants.concat(this.props.userhome);\n    // console.log(restaurants)\n    var beforeSearch = null;\n    var afterSearch = null; // var fav=null;\n    // if(this.state.message === \"Already added as Favourites\"){\n    //   fav =(\n    //     <p>Already added as Favourite !</p>\n    //   )\n    // }else{\n    //   fav =(\n    //     <p>Added to Favourites !</p>\n    //   )\n    // }\n    //console.log(\"city\",this.state.city)\n\n    if (this.state.city === \"null\" || this.state.city === \"Add\" || this.state.restaurants.length === 0) {\n      console.log(\"Before\");\n      beforeSearch = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, \"All Restaurants\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, this.state.restaurants1.map(restaurant => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        style: {\n          width: \"18rem\",\n          height: '13rem'\n        },\n        variant: \"top\",\n        src: `${backendServer}${restaurant.profilepic}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, restaurant.restaurantname, \"   (\", restaurant.city, \")\"), /*#__PURE__*/React.createElement(ListGroup, {\n        className: \"list-group-flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(RiPhoneFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 66\n        }\n      }), \": \", restaurant.phone, \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IoMail, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 66\n        }\n      }), restaurant.email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btngrp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        \"data-tip\": \"Explore\",\n        className: \"cardbtn\",\n        onClick: () => {\n          this.navigatetorestaurant(restaurant._id, restaurant.restaurantname, restaurant.deliverytype);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IoIosRestaurant, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(ReactTooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"cardbtn\",\n        \"data-tip\": \"Add To Favourites\",\n        onClick: () => {\n          this.addToFavourites(restaurant._id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MdFavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 12\n        }\n      }))))))))));\n    } else {\n      console.log(\"After\");\n      afterSearch = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }\n      }, \" Restaurants Near You\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, this.state.restaurants.map(restaurant => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        style: {\n          width: \"18rem\",\n          height: \"13rem\"\n        },\n        variant: \"top\",\n        src: `${backendServer}${restaurant.profilepic}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, restaurant.restaurantname, \" (\", restaurant.city, \")\"), /*#__PURE__*/React.createElement(ListGroup, {\n        className: \"list-group-flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(RiPhoneFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 67\n        }\n      }), \": \", restaurant.phone, \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IoMail, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 66\n        }\n      }), restaurant.email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btngrp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        \"data-tip\": \"Explore\",\n        className: \"cardbtn\",\n        onClick: () => {\n          this.navigatetorestaurant(restaurant._id, restaurant.restaurantname, restaurant.deliverytype);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IoIosRestaurant, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(ReactTooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"cardbtn\",\n        \"data-tip\": \"Add To Favourites\",\n        onClick: () => {\n          this.addToFavourites(restaurant._id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MdFavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 12\n        }\n      }))))))))));\n    } // if(this.state.favourites === \"found\"){\n    //    favouriterest = ( \n    //     <div>\n    //     <h1>Your Favourites</h1>\n    //     <div className=\"card-list\">\n    //       {this.state.favrestaurants.map((restaurant) => (\n    //         <div>\n    //           <Card >\n    //             <Card.Img\n    //               style={{ width: \"18rem\" }}\n    //               variant=\"top\"\n    //               src={`${backendServer}/${restaurant.profilepic}`}\n    //             />\n    //             <Card.Body>\n    //               <Card.Title>{restaurant.username}</Card.Title>\n    //               <ListGroup className=\"list-group-flush\">\n    //                 <ListGroupItem> {restaurant.phone} </ListGroupItem>\n    //                 <ListGroupItem> {restaurant.email}</ListGroupItem>\n    //                 <div className =\"form-buttons\">\n    //                 <Button  \n    //                   onClick={() => {\n    //                     this.navigatetorestaurant(restaurant.restaurantid,restaurant.username);\n    //                   }}\n    //                 >\n    //                   Explore\n    //                 </Button>\n    //                 <Button className=\"cardbtn\"><BiCartAlt/></Button>\n    //                 </div>\n    //               </ListGroup>\n    //             </Card.Body>\n    //           </Card>\n    //         </div>\n    //       ))}\n    //     </div>\n    //     </div>\n    //   );\n    // }\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }\n    }, \"Welcome \", this.state.username, \" !\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }\n    }, this.state.message)))), beforeSearch, afterSearch);\n  }\n\n}\n\nCustomerHome.propTypes = {\n  customerHome: PropTypes.func.isRequired,\n  userhome: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    userhome: state.userhome.userhome\n  };\n};\n\nexport default connect(mapStateToProps, {\n  customerHome\n})(CustomerHome); // export default CustomerHome;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE273-UberEats-Lab3/Frontend/src/components/HomePage/CustomerHome.js"],"names":["React","Component","ReactTooltip","Button","axios","Modal","Card","ListGroup","ListGroupItem","backendServer","IoIosRestaurant","MdFavoriteBorder","RiPhoneFill","IoMail","PropTypes","connect","customerHome","CustomerHome","constructor","props","handleShow","setState","sideshow","handleClose","addToFavourites","restid","show","customerid","localStorage","getItem","favourites","restaurantid","addToFavouritesTable","data","defaults","withCredentials","post","then","res","message","navigatetorestaurant","restaurantname","deliverytype","setItem","history","console","log","push","state","username","email","phone","dob","address","city","country","nickname","about","loading","output","restaurants","restaurants1","favrestaurants","componentDidMount","undefined","length","get","response","concat","componentWillReceiveProps","nextProps","userhome","handleModalClose","render","beforeSearch","afterSearch","map","restaurant","width","height","profilepic","_id","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactTooltip from 'react-tooltip';\n// import cookie from 'react-cookies';\nimport { Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { Modal,Card, ListGroup, ListGroupItem} from \"react-bootstrap\";\nimport backendServer from \"../../webConfig\";\nimport {IoIosRestaurant} from 'react-icons/io';\nimport {MdFavoriteBorder} from 'react-icons/md';\nimport {RiPhoneFill} from 'react-icons/ri';\nimport {IoMail} from 'react-icons/io5';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { customerHome } from \"../../actions/customerHomeActions\";\n\nclass CustomerHome extends Component {\n    \n    constructor(props){\n        super(props);\n  \n        this.state = {\n            customerid : localStorage.getItem(\"userid\"),\n            username: localStorage.getItem(\"username\"),\n            email:localStorage.getItem(\"email\"),\n            phone: localStorage.getItem(\"phone\"),\n            dob:localStorage.getItem(\"dob\"),\n            address:localStorage.getItem(\"address\"),\n            state:localStorage.getItem(\"state\"),\n            city:localStorage.getItem(\"city\"),\n            country:localStorage.getItem(\"country\"),\n            nickname:localStorage.getItem(\"nickname\"),\n            about:localStorage.getItem(\"about\"),\n            favourites:null,\n            loading: false,\n            output: null,\n            restaurants: [],\n            restaurants1: [],\n            favrestaurants: [],\n            show:false,\n            message:null,\n            sideshow:false,\n           \n          }\n      }\n    componentDidMount() {\n    const city = this.state.city;\n    \n    if(city!== \"null\" && city !== \"Add\" ){\n      const data = {\n\t\t\tcity: city,\n\t\t  };\n      this.props.customerHome(data);\n      // console.log(\"city\")\n      // console.log(data)\n      // axios.defaults.headers.common.authorization = localStorage.getItem('token');\n      // axios.post(`${backendServer}/getrestaurantwithcity`,data).then((response) => {\n        \n      //   this.setState({\n      //     restaurants: this.state.restaurants.concat(response.data),\n      //   });\n       \n      // });\n    } if(city === \"null\" || city === \"Add\" || city === undefined || this.state.restaurants.length === 0) {\n      //console.log(\"here\")\n    //   axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n    //     \"token\"\n    // );\n      axios.get(`${backendServer}/getrestaurant`).then((response) => {\n\t\t\t//this.setState({ status: \"notdone\" });\n        // console.log(\"all det\")\n\t\t\t  // console.log(response.data);\n\t\t\t//update the state with the response data\n\t\t\tthis.setState({\n\t\t\t\trestaurants1: this.state.restaurants1.concat(response.data),\n\t\t\t});\n\t\t});\n    }\n\n\t}\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.userhome) {\n        var { userhome } = nextProps;\n}\n\nthis.setState({\n  restaurants: this.state.restaurants.concat(userhome)\n});\n// console.log(typeof(favourite))\n\n}\n  handleModalClose(){\n\t\tthis.setState({show:!this.state.show}) \n\t\t// const {history} = this.props;\n\t    // history.push('/customerhome'); \n\t}\n  handleShow = ()=>{\n    this.setState({\n      sideshow:true\n    });\n  }\n  handleClose= () => {\n    this.setState({\n      sideshow:false\n    });\n }\n  addToFavourites = (restid) =>{\n    this.setState({\n\t\t\tshow : true \n\t\t  });\n\t\tconst customerid = localStorage.getItem(\"userid\");\t\n\t\tconst favourites = {\n\t\t\tcustomerid : customerid,\n\t\t\trestaurantid:restid\t\n\t\t\t};\n\t\tthis.addToFavouritesTable(favourites);\t\n    \n\t}\n  \taddToFavouritesTable = (data) => {\n      // axios.defaults.headers.common[\"authorization\"] = localStorage.getItem(\n      //   \"token\");\n\t\taxios.defaults.withCredentials = true;\n\t\taxios.post(`${backendServer}/addtofavourites`, data).then((res) => {\n     \n       this.setState({\n         message:res.data\n       })\n\t\t\t// console.log(\"Status Code : \", res.status);\n\t\t\t// if (res.status === 200) {\n\t\t\t// \tthis.setState({ authFlag: true });\n\t\t\t// } else {\n\t\t\t// \tthis.setState({ authFlag: false });\n\t\t\t// }\n\t\t});\n\t}\n     \n     \n      navigatetorestaurant = (restaurantid,restaurantname,deliverytype) => {\n       \n        //  window.location.href='/SingleRestDashboard';\n        localStorage.setItem(\"restaurantid\", restaurantid);\n        localStorage.setItem(\"restaurantname\", restaurantname);\n        localStorage.setItem(\"deliverytype\", deliverytype);\n        const { history } = this.props;\n        console.log(history);\n        history.push(\"/singlerestdashboard\");\n\t    };\n      \n\n    render(){\n      // let {restaurants} = this.state;\n\n      // console.log(typeof(this.props.userhome))\n      // restaurants = restaurants.concat(this.props.userhome);\n      // console.log(restaurants)\n      var beforeSearch = null;\n      var afterSearch = null;\n      // var fav=null;\n\n      // if(this.state.message === \"Already added as Favourites\"){\n      //   fav =(\n      //     <p>Already added as Favourite !</p>\n      //   )\n      // }else{\n      //   fav =(\n      //     <p>Added to Favourites !</p>\n      //   )\n      // }\n      //console.log(\"city\",this.state.city)\n      if(this.state.city === \"null\" || this.state.city === \"Add\" ||this.state.restaurants.length ===0){\n        console.log(\"Before\")\n          beforeSearch = ( \n          <div>\n            <br/>\n          <h1>All Restaurants</h1>\n          <div className=\"card-list\">\n          \n            {this.state.restaurants1.map((restaurant) => (\n              <div>\n                <Card style={{ width: \"18rem\" }}>\n                  <Card.Img\n                    style={{ width: \"18rem\" ,height:'13rem'}}\n                    variant=\"top\"\n                    src={`${backendServer}${restaurant.profilepic}`}\n                  />\n                  <Card.Body>\n                    <Card.Title className = \"detailsincard\">{restaurant.restaurantname}   ({restaurant.city})</Card.Title>\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem className = \"detailsincard\"><RiPhoneFill/>: {restaurant.phone} </ListGroupItem>\n                      <ListGroupItem className = \"detailsincard\"><IoMail/>{restaurant.email}</ListGroupItem>\n                      <div className=\"btngrp\">\n\t\t\t\t\t\t\t\t\t\t<Button data-tip=\"Explore\" className=\"cardbtn\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.navigatetorestaurant(restaurant._id,restaurant.restaurantname,restaurant.deliverytype);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<IoIosRestaurant/>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip />\n\t\t\t\t\t\t\t\t\t\t\n                      <Button className=\"cardbtn\" data-tip=\"Add To Favourites\"\n\t\t\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addToFavourites(restaurant._id);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<MdFavoriteBorder/></Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                    </ListGroup>\n                   \n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </div>\n          </div>\n        );\n      }\n      else{\n        console.log(\"After\")\n          afterSearch = (\n            <div>\n            <h1> Restaurants Near You</h1>\n            <div className=\"card-list\">\n            \n              {this.state.restaurants.map((restaurant) => (\n                <div >\n                  <Card style= {{ width: \"18rem\" }} >\n                    <Card.Img\n                      style={{ width: \"18rem\" ,height : \"13rem\"}}\n                      variant=\"top\"\n                      src={`${backendServer}${restaurant.profilepic}`}\n                    />\n                    <Card.Body>\n                    <Card.Title className = \"detailsincard\">{restaurant.restaurantname} ({restaurant.city})</Card.Title>\n                    <ListGroup className=\"list-group-flush\">\n                       <ListGroupItem className = \"detailsincard\"><RiPhoneFill/>: {restaurant.phone} </ListGroupItem>\n                      <ListGroupItem className = \"detailsincard\"><IoMail/>{restaurant.email}</ListGroupItem>\n                      <div className=\"btngrp\">\n\t\t\t\t\t\t\t\t\t\t<Button data-tip=\"Explore\" className=\"cardbtn\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.navigatetorestaurant(restaurant._id,restaurant.restaurantname,restaurant.deliverytype);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<IoIosRestaurant/>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip />\n                      <Button className=\"cardbtn\" data-tip=\"Add To Favourites\"\n\t\t\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addToFavourites(restaurant._id);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<MdFavoriteBorder/></Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                    </ListGroup>\n                   \n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </div>\n          </div>\n        );\n      }\n\n\n      // if(this.state.favourites === \"found\"){\n      //    favouriterest = ( \n      //     <div>\n      //     <h1>Your Favourites</h1>\n      //     <div className=\"card-list\">\n          \n      //       {this.state.favrestaurants.map((restaurant) => (\n      //         <div>\n      //           <Card >\n      //             <Card.Img\n      //               style={{ width: \"18rem\" }}\n      //               variant=\"top\"\n      //               src={`${backendServer}/${restaurant.profilepic}`}\n      //             />\n      //             <Card.Body>\n      //               <Card.Title>{restaurant.username}</Card.Title>\n      //               <ListGroup className=\"list-group-flush\">\n      //                 <ListGroupItem> {restaurant.phone} </ListGroupItem>\n      //                 <ListGroupItem> {restaurant.email}</ListGroupItem>\n      //                 <div className =\"form-buttons\">\n      //                 <Button  \n      //                   onClick={() => {\n      //                     this.navigatetorestaurant(restaurant.restaurantid,restaurant.username);\n      //                   }}\n      //                 >\n      //                   Explore\n      //                 </Button>\n      //                 <Button className=\"cardbtn\"><BiCartAlt/></Button>\n      //                 </div>\n      //               </ListGroup>\n                   \n      //             </Card.Body>\n      //           </Card>\n      //         </div>\n      //       ))}\n      //     </div>\n      //     </div>\n      //   );\n      // }\n     \n    return (\n      \n        <div className=\"container\">\n            \n            {/* <Button className=\"btn-logout\" onClick={this.addtocart}>Cart</Button> */}\n            <form >\n            <h1>Welcome {this.state.username} !</h1>\n           \n            <div>\n              <Modal size=\"md-down\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n              show={this.state.show} onHide={()=>this.handleModalClose()}>\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                {this.state.message}\n                </Modal.Body>\n                \n              </Modal>\n      \t\t\t</div>\n            </form>\n              \n              {beforeSearch}\n              {afterSearch}\n            \n\n              \n     \n       \n     \n        </div>\n      \n    )\n    }\n   \n}\nCustomerHome.propTypes = {\n\tcustomerHome: PropTypes.func.isRequired,\n\tuserhome: PropTypes.object.isRequired,\n  };\n  \n  const mapStateToProps = (state) => {\n\treturn {\n\t\tuserhome: state.userhome.userhome\n\t};\n  };\n  \nexport default connect(mapStateToProps, {customerHome})(CustomerHome);\n\n// export default CustomerHome;"]},"metadata":{},"sourceType":"module"}